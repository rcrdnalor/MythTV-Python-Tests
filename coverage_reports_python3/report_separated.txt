local-admin@newton:~/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests$ ./run_all_tests_separated.sh
Using python3-coverage.

Using the following tests:
test.test_Dataheap_Job_001
test.test_Dataheap_Job_002
test.test_Dataheap_Recorded_001
test.test_Dataheap_Recorded_002
test.test_Dataheap_Recorded_003
test.test_Dataheap_Video_001
test.test_Dataheap_Video_002
test.test_Dataheap_Video_003
test.test_Dataheap_Video_004
test.test_Dataheap_Video_005
test.test_Dataheap_VideoGrabber_001
test.test_datetime_000
test.test_datetime_001
test.test_datetime_002
test.test_datetime_003
test.test_DBCache_001
test.test_DictData_001
test.test_DictInv_001
test.test_enum_001
test.test_Logging_001
test.test_Logging_002
test.test_Logging_003
test.test_Logging_004
test.test_Logging_005
test.test_Logging_006
test.test_Methodheap_BEEventMonitor_001
test.test_Methodheap_Frontend_001
test.test_Methodheap_MythBE_001
test.test_Methodheap_MythDB_001
test.test_Methodheap_MythSystemEvent_001
test.test_Methodheap_MythXML_001
test.test_Methodheap_MythXML_002
test.test_MSearch_001
test.test_MSearch_002
test.test_Mythproto_001
test.test_OrdDict_001
test.test_System_001
test.test_repr_001
test.test_singleton_001
test_Dataheap_Job_001_01 (test.test_Dataheap_Job_001.test_Dataheap_Job_001)
Test classmethod Job.fromRecorded() from 'dataheap'. ... /home/local-admin/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests/MythTV/_conn_mysqldb.py:77: Warning: (1364, "Field 'args' doesn't have a default value")
  return super(LoggedCursor, self).execute(query, args)
ok

----------------------------------------------------------------------
Ran 1 test in 320.441s

OK
sys:1: ResourceWarning: unclosed file <_io.BufferedWriter name='/tmp/my_logfile'>
test_Dataheap_Job_002_01 (test.test_Dataheap_Job_002.test_Dataheap_Job_002)
Test classmethod Job.fromProgram() from 'dataheap'. ... /home/local-admin/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests/MythTV/_conn_mysqldb.py:77: Warning: (1364, "Field 'args' doesn't have a default value")
  return super(LoggedCursor, self).execute(query, args)

<Job '81' at 0x7f5095dae3b8>
<Job '81' at 0x7f5095dae3b8>
ok
test_Dataheap_Job_002_02 (test.test_Dataheap_Job_002.test_Dataheap_Job_002)
Test exception of classmethod Job.fromProgram() from 'dataheap'. ... ok

----------------------------------------------------------------------
Ran 2 tests in 300.499s

OK
sys:1: ResourceWarning: unclosed file <_io.BufferedWriter name='/tmp/my_logfile'>
test_Dataheap_Recorded_001_01 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test property 'artwork' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_02 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'getProgram()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_03 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'getRecordedProgram()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_04 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'formatPath()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_05 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'exportMetadata()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_06 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'Recorded.importMetadata()' and 'Recorded.update()' ... ok
test_Dataheap_Recorded_001_07 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test methods 'db.searchRecorded and Recorded.getRecordedFile()' ...
<RecordedFile '10111_20200202140200.ts','6' at 0x7f09c7989d00>
<RecordedFile '10111_20200202140200.ts','6' at 0x7f09c7989d00>
['10111_20200202140200.ts', 7174175692, 1920, 1088, 25.0, 1.777778, 0, 0, 'MP2', 'H264', '', 'mythbev31', 'Default', 6, 6, 'MPEG2-TS', 0, 0, 0, 0, 0]
['10111_20200202140200.ts', 7174175692, 1920, 1088, 25.0, 1.777778, 0, 0, 'MP2', 'H264', '', 'mythbev31', 'Default', 6, 6, 'MPEG2-TS', 0, 0, 0, 0, 0]
['basename', 'filesize', 'width', 'height', 'fps', 'aspect', 'audio_sample_rate', 'audio_channels', 'audio_codec', 'video_codec', 'comment', 'hostname', 'storagegroup', 'id', 'recordedid', 'container', 'total_bitrate', 'video_avg_bitrate', 'video_max_bitrate', 'audio_avg_bitrate', 'audio_max_bitrate']
['basename', 'filesize', 'width', 'height', 'fps', 'aspect', 'audio_sample_rate', 'audio_channels', 'audio_codec', 'video_codec', 'comment', 'hostname', 'storagegroup', 'id', 'recordedid', 'container', 'total_bitrate', 'video_avg_bitrate', 'video_max_bitrate', 'audio_avg_bitrate', 'audio_max_bitrate']
25.0
25.0
ok

----------------------------------------------------------------------
Ran 7 tests in 0.248s

OK
test_Dataheap_Recorded_002_01 (test.test_Dataheap_Recorded_002.test_Dataheap_Recorded_002)
Test creation of a Recoreded and ... ok
test_Dataheap_Recorded_002_02 (test.test_Dataheap_Recorded_002.test_Dataheap_Recorded_002)
Test creation of a Recoreded and ... Steven Seagal - Mercenary
[[('name', 'Catherine Deneuve'), ('role', 'actor')], [('name', 'Gérard Depardieu'), ('role', 'actor')], [('name', 'Andréa Ferréol'), ('role', 'actor')], [('name', 'François Truffaut'), ('role', 'director')]]
ok

----------------------------------------------------------------------
Ran 2 tests in 0.119s

OK
test_Dataheap_Recorded_003_01 (test.test_Dataheap_Recorded_003.test_Dataheap_Recorded_003)
Test creation of a Recoreded and ... [[('name', 'Catherine Deneuve'), ('role', 'actor')], [('name', 'Gérard Depardieu'), ('role', 'actor')], [('name', 'Andréa Ferréol'), ('role', 'actor')], [('name', 'Jean Poiret'), ('role', 'actor')], [('name', 'François Truffaut'), ('role', 'director')]]
ok

----------------------------------------------------------------------
Ran 1 test in 0.093s

OK
test_Dataheap_Video_001_getHash_01 (test.test_Dataheap_Video_001.test_Dataheap_Video_001)
Test 'getHash' method from MythTV.Video ...
<Video 'Machen wir's in Liebe' at 0x7fd0e5e37308>
<Video '2' at 0x7fd0e5e37308>
ok

----------------------------------------------------------------------
Ran 1 test in 0.100s

OK
test_Dataheap_Video_002_parseFilename_01 (test.test_Dataheap_Video_002.test_Dataheap_Video_002)
Test 'parseFilename' method from MythTV.Video ... ok
test_Dataheap_Video_002_parseFilename_02 (test.test_Dataheap_Video_002.test_Dataheap_Video_002)
Test 'parseFilename' method from MythTV.Video ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.042s

OK
test_Dataheap_Video_003_exportMetadata_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'exportMetadata' method from MythTV.Video. ... ok
test_Dataheap_Video_003_fromFilename_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'fromFilename' classmethod from MythTV.Video. ... ok
test_Dataheap_Video_003_importMetadata_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'exportMetadata' method from MythTV.Video. ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.162s

OK
test_Dataheap_Video_004_01 (test.test_Dataheap_Video_004.test_Dataheap_Video_004)
Test creation of a Video and ... <Video 'Le Dernier Métro' at 0x7f8ea035e2b0>
<Video '78' at 0x7f8ea035e2b0>
ok

----------------------------------------------------------------------
Ran 1 test in 0.073s

OK
test_Dataheap_Video_005_01 (test.test_Dataheap_Video_005.test_Dataheap_Video_005)
Test creation of a Video with an existing file and host entry. ... ssh mythtv@10.0.0.221 'head -c 10M </dev/urandom > "/mnt/mythtv/videos/Le Dernier Métro.mkv"'
ssh mythtv@10.0.0.221 'rm "/mnt/mythtv/videos/Le Dernier Métro.mkv"'
ok

----------------------------------------------------------------------
Ran 1 test in 2.979s

OK
test_Dataheap_VideoGrabber_001_grabInetref_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'grabInetref' and 'toXML' methods from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_001_search_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'search' method from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_001_sortedSearch_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'sortedSearch' method from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_002_importMetadata_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_002)
Test 'VideoGrabber.grabInetref' method and 'Video.importMetadata' ... ok
test_Dataheap_VideoGrabber_002_importMetadata_02 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_002)
Test 'VideoGrabber.grabInetref' method and 'Video.importMetadata' ... ok

----------------------------------------------------------------------
Ran 5 tests in 10.488s

OK
local time:  Fri 2021-12-03 15:53:52 CET
utc time:    Fri 2021-12-03 14:53:52 UTC
time offset: 3600
timestamp:   1638543232.518298 <class 'float'>
test_datetime_000_01 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.localTZ() ... ok
test_datetime_000_02 (test.test_datetime_000.test_datetime_000)
test method 'MythTV.datetime.UTCTZ()' ... ok
test_datetime_000_03 (test.test_datetime_000.test_datetime_000)
test method 'MythTV.datetime.fromDatetime()' without tzinfo ... ok
test_datetime_000_04 (test.test_datetime_000.test_datetime_000)
test method 'MythTV.datetime.fromDatetime()' with tzinfo ... ok
test_datetime_000_05 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.now()' without tzinfo ... ok
test_datetime_000_06 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.now()' with tzinfo ... ok
test_datetime_000_07 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.utcnow()' ... ok
test_datetime_000_08 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.utcnow()' against output of 'timedatectl' ... ok
test_datetime_000_09 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.fromtimestamp()' without given time-zone ... ok
test_datetime_000_10 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.fromtimestamp()' with given time-zone ... ok
test_datetime_000_11 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.utcfromtimestamp() ... ok
test_datetime_000_12 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.strptime()' without timezone ... ok
test_datetime_000_13 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.strptime()' with given timezone ... ok
test_datetime_000_14 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.fromnaiveutc(cls, dt)()' ... ok
test_datetime_000_15 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.frommythtime(cls, mtime, tz=None) ... ok
test_datetime_000_16 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.mythformat ... ok
test_datetime_000_17 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.timestamp() ... ok
test_datetime_000_18 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.rfcformat() ... ok
test_datetime_000_19 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.utcrfcformat() ... ok
test_datetime_000_20 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.datetime.utcisoformat() ... ok
test_datetime_000_21 (test.test_datetime_000.test_datetime_000)
Test method 'MythTV.asnaiveutc() ... ok

----------------------------------------------------------------------
Ran 21 tests in 0.098s

OK
/usr/lib/python3.6/importlib/_bootstrap.py:219: ImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__
  return f(*args, **kwds)
test_datetime_001_01 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_02 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_03 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_04 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_05 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_06 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_07 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_08 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_09 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_10 (test.test_datetime_001.test_datetime_001)
Test 'utctimestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_11 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_12 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_13 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok

----------------------------------------------------------------------
Ran 13 tests in 0.068s

OK
/usr/lib/python3.6/importlib/_bootstrap.py:219: ImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__
  return f(*args, **kwds)
test_datetime_002_01 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_02 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_03 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_04 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_05 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_06 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_07 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_08 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_09 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_10 (test.test_datetime_002.test_datetime_002)
Test 'utctimestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_11 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_12 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_13 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok

----------------------------------------------------------------------
Ran 13 tests in 0.063s

OK
test_datetime_003_01 (test.test_datetime_003.test_datetime_003)
Test if class 'posixtzinfo' is an 'InputSingleton'. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.002s

OK
test_DBCache_001_01 (test.test_DBCache_001.test_DBCache_001)
Get all settings from database. ... Python-Version: 3
ok

----------------------------------------------------------------------
Ran 1 test in 0.031s

OK
test_dictdata_001_00 (test.test_DictData_001.test_DictData_001)
Test copy of the DictData. ... ok
test_dictdata_001_01 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'integer' object. ... ok
test_dictdata_001_02 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'float' object. ... ok
test_dictdata_001_03 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'bool' object. ... ok
test_dictdata_001_04 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'str' object. ... ok
test_dictdata_001_05 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'tiemstamp' object. ... ok
test_dictdata_001_06 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'ISO date' object. ... ok
test_dictdata_001_07 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'RFC time' object. ... ok
test_dictdata_001_08 (test.test_DictData_001.test_DictData_001)
Test exception in '__setitem__' for unknown key. ... ok
test_dictdata_001_09 (test.test_DictData_001.test_DictData_001)
Test setting of an unknown key (var 1). ... ok
test_dictdata_001_10 (test.test_DictData_001.test_DictData_001)
Test setting an unknown key (var 2). ... ok
test_dictdata_001_11 (test.test_DictData_001.test_DictData_001)
Test deleting a key (var 1). ... ok
test_dictdata_001_12 (test.test_DictData_001.test_DictData_001)
Test deleting a key (var 2). ... ok
test_dictdata_001_13 (test.test_DictData_001.test_DictData_001)
Test deleting a key (var 3). ... ok
test_dictdata_001_14 (test.test_DictData_001.test_DictData_001)
Test unequal length. ... ok
test_dictdata_001_15 (test.test_DictData_001.test_DictData_001)
Test passthrough of field_type. ... ok

----------------------------------------------------------------------
Ran 16 tests in 0.002s

OK
test_DictInvCI_001_01 (test.test_DictInv_001.test_DictInv_001)
Test '__getitem__' of DictInvCI. ... ok
test_DictInvCI_001_02 (test.test_DictInv_001.test_DictInv_001)
Test '__contains__' of DictInvCI. ... ok
test_DictInvCI_001_03 (test.test_DictInv_001.test_DictInv_001)
Test '__setitem__' of DictInvCI. ... ok
test_DictInvCI_001_04 (test.test_DictInv_001.test_DictInv_001)
Test '__delitem__' of DictInvCI. ... ok
test_DictInv_001_01 (test.test_DictInv_001.test_DictInv_001)
Test '__setitem__', '__delitem__' of DictInvert. ... ok
test_DictInv_001_02 (test.test_DictInv_001.test_DictInv_001)
Test 'createPair' of DictInvert. ... ok
test_DictInv_001_03 (test.test_DictInv_001.test_DictInv_001)
Test '__init__' with extra dict as argument. ... ok

----------------------------------------------------------------------
Ran 7 tests in 0.001s

OK
test_Enum_001_01 (test.test_enum_001.test_Enum_001)
Test MythTV.utility.Enum. ... ok
test_Enum_001_02 (test.test_enum_001.test_Enum_001)
Test MythTV.utility.Enum. ... ok
test_Enum_002_01 (test.test_enum_001.test_Enum_002)
Test MythTV.utility.BitwiseEnum. ... ok
test_Enum_002_02 (test.test_enum_001.test_Enum_002)
Test MythTV.utility.BitwiseEnum. ... ok

----------------------------------------------------------------------
Ran 4 tests in 0.001s

OK
test_Logging_Basic_001_01 (test.test_Logging_001.test_Logging_Basic_001)
Test if default options works with MythLog. ...
<MythLog 'simple_test','0b1' at 0x7f5aa3fb0f60>
<MythLog 'simple_test','0b1' at 0x7f5aa3fb0f60>
ok
test_Logging_Basic_002_01 (test.test_Logging_001.test_Logging_Basic_002)
Test if options can be modified from MythTV.MythLog. ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.001s

OK
test_Logging_Basic_003_01 (test.test_Logging_002.test_Logging_Basic_003)
Test that default options does not work without a MythLog instance. ... ok
test_Logging_Basic_004_01 (test.test_Logging_002.test_Logging_Basic_004)
"Test if setting options works without a MythLog instance. ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.002s

OK
test_logging_OptParse_001_01 (test.test_Logging_003.test_Logging_OptParse_001)
Test if 'OptParse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_logging_OptParse_002_01 (test.test_Logging_004.test_Logging_OptParse_002)
Test if 'OptParse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_Logging_argparse_001_01 (test.test_Logging_005.test_Logging_argparse_001)
Test if 'argparse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_Logging_argparse_002_01 (test.test_Logging_006.test_Logging_argparse_002)
Test if 'argparse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_test_Methodheap_BEEventMonitor_001_01 (test.test_Methodheap_BEEventMonitor_001.test_Methodheap_BEEventMonitor_001)
Test 'BEEventMonitor' from MythTV.BEEventMonitor() with logging. ... ok

----------------------------------------------------------------------
Ran 1 test in 19.376s

OK
test_Methodheap_Frontend_001_getLoad_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getLoad' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getMemory_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getTime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getPlay_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getPlay'' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getQuery_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getQuery'' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getScreenShot_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getScreenShot' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getTime_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getTime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getUptime_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getUptime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_query_play_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'sendQuery', 'sendPlay' and 'jump' methods from MythTV.Frontend() ... ok

----------------------------------------------------------------------
Ran 8 tests in 40.342s

OK
test_Methodheap_MythBE_001_getPendingRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_001)
Test 'getPendingRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_002_getScheduledRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_002)
Test 'getScheduledRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_003_getUpcomingRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_003)
Test 'getUpcomingRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_004_getConflictedRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_004)
Test 'getConflictedRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_005_getRecorderList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_005)
Test 'getRecorderList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_006_getFreeRecorderList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_006)
Test 'getFreeRecorderList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_007_getFreeInputInfo_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_007)
Test 'getFreeInputInfo' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_009_getCurrentRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_009)
Test 'getCurrentRecording' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_010_isRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_010)
Test 'isRecording' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_011_isActiveBackend_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_011)
Test 'isActiveBackend' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_012_getRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_012)
Test 'getRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_013_getExpiring_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_013)
Test 'getExpiring' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_014_getExpiring_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_014)
Test 'getCheckfile' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_016_getFreeSpaceSummary_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_016)
Test 'getFreeSpaceSummary' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_017_getLoad_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_017)
Test 'getLoad' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_018_getUptime_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_018)
Test 'getUptime' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_019_walkSG_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_019)
Test 'walkSG' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_020_getSGList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_020)
Test 'getSGList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_020_getSGList_02 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_020)
Test 'getSGList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_021_getSGFile_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_021)
Test 'getSGFile' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_101_getRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_101)
Test 'getRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_102_forgetRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_102)
Test 'forgetRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_103_deleteRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_103)
Test 'deleteRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_104_deleteFile_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_104)
Test 'deleteFile' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_105_getHash_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_105)
Test 'getHash' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_106_reschedule_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_106)
Test 'reschedule' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_106_reschedule_02 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_106)
Test 'reschedule' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_107_fileExists_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_107)
Test 'fileExists' method from MythTV.MythBE() inherited from FileOps. ... ok
test_methodheap_mythbe_015_getFreeSpace_01 (test.test_Methodheap_MythBE_001.test_methodheap_mythbe_015)
test 'getFreeSpace' method from mythtv.mythbe(). ... ok
test_methodheap_mythbe_015_getFreeSpace_02 (test.test_Methodheap_MythBE_001.test_methodheap_mythbe_015)
test 'getFreeSpace' method from mythtv.mythbe(). ...
<FreeSpace 'mythbev31:/mnt/mythtv/livetv,mythbev31:/mnt/mythtv/recordings@mythbev31' at 0x7f334a93d048>
<FreeSpace 'mythbev31:/mnt/mythtv/livetv,mythbev31:/mnt/mythtv/recordings@mythbev31' at 0x7f334a93d048>
ok

----------------------------------------------------------------------
Ran 30 tests in 1.248s

OK
test_Methodheap_MythDB_001_searchRecorded_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'chanid'. ... ok
test_Methodheap_MythDB_001_searchRecorded_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'chanid', 'title'. ... ok
test_Methodheap_MythDB_001_searchRecorded_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_04 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan' and 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_05 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan' and 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_06 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan', ... ok
test_Methodheap_MythDB_002_searchOldRecorded_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() via 'chanid'. ... ok
test_Methodheap_MythDB_002_searchOldRecorded_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() via 'chanid', 'title'. ... ok
test_Methodheap_MythDB_002_searchOldRecorded_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_003_searchArtwork_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_003_searchArtwork_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB(), ... ok
test_Methodheap_MythDB_003_searchArtwork_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB() by given inetref. ... ok
test_Methodheap_MythDB_004_searchJobs_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_004)
Test 'searchJobs' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_005_searchGuide_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_005)
Test 'searchGuide' method from MythTV.MythDB(). ...
<Guide 'ZDF Magazin Royale','2021-12-07 00:50:00+01:00' at 0x7f6159f9f9e8>
ok
test_Methodheap_MythDB_005_searchGuide_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_005)
Test 'searchGuide' method from MythTV.MythDB() using fuzzy title. ... ok
test_Methodheap_MythDB_006_searchRecord_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_006)
Test 'searchRecord' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_006_searchRecord_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_006)
Test 'searchRecord' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_007_getFrontends_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_007)
Test 'getFrontends' method from MythTV.MythDB(). ... mythtest@6546
ok
test_Methodheap_MythDB_008_getFrontend_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_008)
Test 'getFrontend' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_009_scanVideos_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_009)
Test 'scanVideos' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_010_searchVideos_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_010)
Test 'searchVideos' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_100_gethostnames_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_100)
Test 'gethostname' method from MythTV.MythDB() inherited from DBCache. ... ok
test_Methodheap_MythDB_101_getMasterBackend_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_101)
Test 'getMasterBackend' method from MythTV.MythDB() inherited from DBCache. ... ok
test_Methodheap_MythDB_102_getStorageGroup_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_102)
Test 'getStorageGroup' method from MythTV.MythDB() inherited from DBCache. ... ok

----------------------------------------------------------------------
Ran 24 tests in 0.792s

OK
test_test_Methodheap_MythSystemEvent_001_01 (test.test_Methodheap_MythSystemEvent_001.test_Methodheap_MythSystemEvent_001)
Test if 'MythSystemEvent' calls a registered script for the ... ok

----------------------------------------------------------------------
Ran 1 test in 3.902s

OK
test_Methodheap_MythXML_001_01 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getHosts(). ... ok
test_Methodheap_MythXML_001_010 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getRecorded() during standard time and ... ok
test_Methodheap_MythXML_001_02 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getKeys(). ... ok
test_Methodheap_MythXML_001_03 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getSetting(). ... ok
test_Methodheap_MythXML_001_04 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getProgramGuide() ... ok
test_Methodheap_MythXML_001_05 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getProgramDetails(). ... ok
test_Methodheap_MythXML_001_06 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getChannelIcon() ... ok
test_Methodheap_MythXML_001_07 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getRecorded(). ... ok
test_Methodheap_MythXML_001_08 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getExpiring(). ... ok
test_Methodheap_MythXML_001_09 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getPreviewImage(). ... ok

----------------------------------------------------------------------
Ran 10 tests in 0.858s

OK
test_Methodheap_MythXML_002_01 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getHosts() with logging. ... ok
test_Methodheap_MythXML_002_010 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getRecorded() during standard time and ... ok
test_Methodheap_MythXML_002_02 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getKeys() with logging. ... ok
test_Methodheap_MythXML_002_03 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getSetting() with logging. ... ok
test_Methodheap_MythXML_002_04 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getProgramGuide()  with logging. ... ok
test_Methodheap_MythXML_002_05 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getProgramDetails()  with logging. ... ok
test_Methodheap_MythXML_002_06 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getChannelIcon() with logging. ... ok
test_Methodheap_MythXML_002_07 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getRecorded() with logging. ... ok
test_Methodheap_MythXML_002_08 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getExpiring() with logging. ... ok
test_Methodheap_MythXML_002_09 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getPreviewImage(). ... ok

----------------------------------------------------------------------
Ran 10 tests in 0.993s

OK
test_MSearch_001_01 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.search(). ... ok
test_MSearch_001_02 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.searchMythBE(). ... ok
test_MSearch_001_03 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.searchMythFE(). ... ok

----------------------------------------------------------------------
Ran 3 tests in 2.708s

OK
test_MSearch_002_01 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.search() logging. ... ok
test_MSearch_002_02 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.searchMythBE() logging. ... ok
test_MSearch_002_03 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.searchMythFE() logging. ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.154s

OK
test_Mythproto_001_findfile_01 (test.test_Mythproto_001.test_Mythproto_001)
Test 'findfile' method from MythTV mytproto. ... ok
test_Mythproto_002_ftopen_01 (test.test_Mythproto_001.test_Mythproto_002)
Test 'ftopen' method from MythTV mythproto.py with 'chanid', 'starttime'. ... Exception ignored in: <bound method FileTransfer.__del__ of <open file 'myth://Temp@10.0.0.221/10102_20200202181300.ts', mode 'w' at 0x7f233a015358>>
Traceback (most recent call last):
  File "/home/local-admin/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests/MythTV/mythproto.py", line 405, in __del__
    del self.ftsock
AttributeError: ftsock
ok
test_Mythproto_003_ftopen_01 (test.test_Mythproto_001.test_Mythproto_003)
Test 'ftopen' method from MythTV mythproto.py with 'chanid', 'starttime' ... ok
test_Mythproto_004_ftopen_01 (test.test_Mythproto_001.test_Mythproto_004)
Test 'ftopen' method from MythTV mythproto.py by calling ... ok
test_Mythproto_005_ftopen_01 (test.test_Mythproto_001.test_Mythproto_005)
Test 'ftopen' method from MythTV mythproto.py by calling ... ok

----------------------------------------------------------------------
Ran 5 tests in 263.798s

OK
Exception ignored in: <bound method FileTransfer.__del__ of <open file 'myth://LiveTV@10.0.0.221/10111_20211203145613.ts', mode 'r' at 0x7f233a035ba8>>
Traceback (most recent call last):
  File "/home/local-admin/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests/MythTV/mythproto.py", line 405, in __del__
    del self.ftsock
AttributeError: ftsock
Exception ignored in: <bound method DownloadFileTransfer.__del__ of <open file 'myth://Temp@10.0.0.221//download_851c2336.tmp', mode 'r' at 0x7f233a026a20>>
Traceback (most recent call last):
  File "/home/local-admin/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests/MythTV/mythproto.py", line 624, in __del__
    FileTransfer.__del__(self)
  File "/home/local-admin/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests/MythTV/mythproto.py", line 405, in __del__
    del self.ftsock
AttributeError: ftsock
Exception ignored in: <bound method FileTransfer.__del__ of <open file 'myth://Default@10.0.0.221/10102_20200202181300.ts', mode 'r' at 0x7f233a00c048>>
Traceback (most recent call last):
  File "/home/local-admin/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests/MythTV/mythproto.py", line 405, in __del__
    del self.ftsock
AttributeError: ftsock
test_OrdDict_001_00 (test.test_OrdDict_001.test_OrdDict_001)
Test equality and order of OrdDict. ... ok
test_OrdDict_001_01 (test.test_OrdDict_001.test_OrdDict_001)
Test getattr, getitem the OrdDict. ... ok
test_OrdDict_001_02 (test.test_OrdDict_001.test_OrdDict_001)
Test setattr, setitem of the OrdDict. ... ok
test_OrdDict_001_03 (test.test_OrdDict_001.test_OrdDict_001)
Test setattr, getattr, delattr of local variables. ... ok
test_OrdDict_001_04 (test.test_OrdDict_001.test_OrdDict_001)
Test delattr, delitem of the OrdDict. ... ok
test_OrdDict_001_05 (test.test_OrdDict_001.test_OrdDict_001)
Test iter of the OrdDict's values, items, keys. ... ok
test_OrdDict_001_07 (test.test_OrdDict_001.test_OrdDict_001)
Test a copy of the OrdDict. ... ok
test_OrdDict_001_08 (test.test_OrdDict_001.test_OrdDict_001)
Test 'self.values()' of the OrdDict. ... ok
test_OrdDict_001_09 (test.test_OrdDict_001.test_OrdDict_001)
Test 'self.clear()' of the OrdDict. ... ok
test_OrdDict_001_10 (test.test_OrdDict_001.test_OrdDict_001)
Test '__iter__' over OrdDict. ... ok

----------------------------------------------------------------------
Ran 10 tests in 0.001s

OK
test_system_001_01 (test.test_System_001.test_System_001)
Test if 'System' executes 'echo' command. ... ok
test_system_001_02 (test.test_System_001.test_System_001)
Test if 'System' failes on 'exho' command. ... ok
test_system_002_01 (test.test_System_001.test_System_002)
Test if 'System.system' executes 'echo' command. ... ok
test_system_002_02 (test.test_System_001.test_System_002)
Test if 'System.system' failes on 'exho' command. ... ok
test_system_002_03 (test.test_System_001.test_System_002)
Test if 'System.system' executes command specified to report to 'stderr'. ... ok
test_system_003_01 (test.test_System_001.test_System_003)
Test if 'System.system' executes 'echo' command with unicode characters. ... ok

----------------------------------------------------------------------
Ran 6 tests in 0.523s

OK
test_repr_001_01 (test.test_repr_001.test_repr_and_str_001) ...
<MythDB 'sql://mythconverg@10.0.0.221:3306/' at 0x7efeece39c50>
<MythDB 'sql://mythconverg@10.0.0.221:3306/' at 0x7efeece39c50>

['recgroups']
['recgroups']

{'type': 'varchar(64)', 'null': 'NO', 'key': 'UNI', 'default': '', 'extra': ''}
{'type': 'varchar(64)', 'null': 'NO', 'key': 'UNI', 'default': '', 'extra': ''}
ok
test_repr_001_02 (test.test_repr_001.test_repr_and_str_001) ...
[]
[]

[]
[]

'10.0.0.221'
10.0.0.221

[]
[]

'6546'
6546
ok
test_repr_001_03 (test.test_repr_001.test_repr_and_str_001) ...
<StorageGroup 'myth://LiveTV@mythbev31/mnt/mythtv/livetv/' at 0x7efeecdfc0f8
<StorageGroup 'myth://LiveTV@mythbev31/mnt/mythtv/livetv/' at 0x7efeecdfc0f8
ok
test_repr_002_01 (test.test_repr_001.test_repr_and_str_002) ...
<Recorded 'Die Frau des Zeitreisenden','2020-02-02 15:02:00+01:00' at 0x7efeece29c50>
<Recorded 'Die Frau des Zeitreisenden','2020-02-02 15:02:00+01:00' at 0x7efeece29c50>

[[('mark', 0), ('type', -3), ('data', None)], [('mark', 6353), ('type', 0), ('data', None)], [('mark', 54117), ('type', 0), ('data', None)], [('mark', 95806), ('type', 0), ('data', None)], [('mark', 136948), ('type', 0), ('data', None)], [('mark', 176853), ('type', 0), ('data', None)], [('mark', 43158), ('type', 1), ('data', None)], [('mark', 85375), ('type', 1), ('data', None)], [('mark', 125566), ('type', 1), ('data', None)], [('mark', 166275), ('type', 1), ('data', None)], [('mark', 192621), ('type', 1), ('data', None)], [('mark', 1), ('type', 12), ('data', None)], [('mark', 1), ('type', 30), ('data', 1920)], [('mark', 1), ('type', 31), ('data', 1088)], [('mark', 1), ('type', 32), ('data', 25000)], [('mark', 0), ('type', 33), ('data', 8314000)], [('mark', 0), ('type', 34), ('data', 207543)], [('mark', 5961), ('type', 40), ('data', None)], [('mark', 7084), ('type', 41), ('data', None)]]
[[('mark', 0), ('type', -3), ('data', None)], [('mark', 6353), ('type', 0), ('data', None)], [('mark', 54117), ('type', 0), ('data', None)], [('mark', 95806), ('type', 0), ('data', None)], [('mark', 136948), ('type', 0), ('data', None)], [('mark', 176853), ('type', 0), ('data', None)], [('mark', 43158), ('type', 1), ('data', None)], [('mark', 85375), ('type', 1), ('data', None)], [('mark', 125566), ('type', 1), ('data', None)], [('mark', 166275), ('type', 1), ('data', None)], [('mark', 192621), ('type', 1), ('data', None)], [('mark', 1), ('type', 12), ('data', None)], [('mark', 1), ('type', 30), ('data', 1920)], [('mark', 1), ('type', 31), ('data', 1088)], [('mark', 1), ('type', 32), ('data', 25000)], [('mark', 0), ('type', 33), ('data', 8314000)], [('mark', 0), ('type', 34), ('data', 207543)], [('mark', 5961), ('type', 40), ('data', None)], [('mark', 7084), ('type', 41), ('data', None)]]

[('mark', 0), ('type', -3), ('data', None)]
[('mark', 0), ('type', -3), ('data', None)]

0
0

None
None

<RecordedArtwork 'tmdb3.py_24420','0' at 0x7efeec734048>
<RecordedArtwork 'tmdb3.py_24420','0' at 0x7efeec734048>

<Coverart 'tmdb3.py_24420_coverart.jpg'>
coverart

<RecordedProgram 'Die Frau des Zeitreisenden','2020-02-02 15:06:12+01:00' at 0x7efeec734308>
<RecordedProgram 'Die Frau des Zeitreisenden','2020-02-02 15:06:12+01:00' at 0x7efeec734308>

<OldRecorded 'Die Frau des Zeitreisenden','2020-02-02 15:06:12+01:00' at 0x7efeec7418e0>
<OldRecorded 'Die Frau des Zeitreisenden','2020-02-02 15:06:12+01:00' at 0x7efeec7418e0>
ok
test_repr_002_02 (test.test_repr_001.test_repr_and_str_002) ...
<Channel '10111','ATV HD' at 0x7efeece29c50>
<Channel '10111','ATV HD' at 0x7efeece29c50>

1
1
ok
test_repr_003_01 (test.test_repr_001.test_repr_and_str_003) ...
<Frontend '10.0.0.220@6546' at 0x7efeec739e80>
10.0.0.220@6546

['#', '$', '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '[', '\\', ']', '_', 'ampersand', 'asterisk', 'backslash', 'backspace', 'backtab', 'bar', 'bracketleft', 'bracketright', 'colon', 'comma', 'delete', 'dollar', 'down', 'end', 'enter', 'equal', 'escape', 'f1', 'f10', 'f11', 'f12', 'f13', 'f14', 'f15', 'f16', 'f17', 'f18', 'f19', 'f2', 'f20', 'f21', 'f22', 'f23', 'f24', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'greater', 'hash', 'home', 'insert', 'left', 'less', 'minus', 'numbersign', 'pagedown', 'pageup', 'parenleft', 'parenright', 'percent', 'period', 'pipe', 'plus', 'poundsign', 'question', 'return', 'right', 'semicolon', 'slash', 'space', 'tab', 'underscore', 'up', '|']
['#', '$', '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '[', '\\', ']', '_', 'ampersand', 'asterisk', 'backslash', 'backspace', 'backtab', 'bar', 'bracketleft', 'bracketright', 'colon', 'comma', 'delete', 'dollar', 'down', 'end', 'enter', 'equal', 'escape', 'f1', 'f10', 'f11', 'f12', 'f13', 'f14', 'f15', 'f16', 'f17', 'f18', 'f19', 'f2', 'f20', 'f21', 'f22', 'f23', 'f24', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'greater', 'hash', 'home', 'insert', 'left', 'less', 'minus', 'numbersign', 'pagedown', 'pageup', 'parenleft', 'parenright', 'percent', 'period', 'pipe', 'plus', 'poundsign', 'question', 'return', 'right', 'semicolon', 'slash', 'space', 'tab', 'underscore', 'up', '|']

dict_items([('channelpriorities', 'Channel Recording Priorities'), ('channelrecpriority', 'Channel Recording Priorities'), ('guidegrid', 'Program Guide'), ('livetv', 'Live TV'), ('mainmenu', 'Main Menu'), ('managerecordings', 'Manage Recordings / Fix Conflicts'), ('managerecrules', 'Manage Recording Rules'), ('musicplaylists', 'Select music playlists'), ('mythgallery', 'MythGallery'), ('mythgame', 'MythGame'), ('mythnews', 'MythNews'), ('mythvideo', 'Video Default'), ('mythweather', 'MythWeather'), ('pbb', 'TV Recording Playback'), ('playbackbox', 'TV Recording Playback'), ('playbackrecordings', 'TV Recording Playback'), ('playdvd', 'Play Disc'), ('playlistview', 'Play music'), ('playmusic', 'Play music'), ('previousbox', 'Previously Recorded'), ('progfinder', 'Program Finder'), ('programfinder', 'Program Finder'), ('programguide', 'Program Guide'), ('reloadtheme', 'Reload Theme'), ('ripcd', 'Rip CD'), ('showborders', 'Toggle Show Widget Borders'), ('shownames', 'Toggle Show Widget Names'), ('statusbox', 'Status Screen'), ('videobrowser', 'Video Browser'), ('videogallery', 'Video Gallery'), ('videolistings', 'Video Listings'), ('videomanager', 'Video Manager'), ('viewscheduled', 'Manage Recordings / Fix Conflicts'), ('zoneminderconsole', 'ZoneMinder Console'), ('zoneminderevents', 'ZoneMinder Events'), ('zoneminderliveview', 'ZoneMinder Live View')])
dict_items([('channelpriorities', 'Channel Recording Priorities'), ('channelrecpriority', 'Channel Recording Priorities'), ('guidegrid', 'Program Guide'), ('livetv', 'Live TV'), ('mainmenu', 'Main Menu'), ('managerecordings', 'Manage Recordings / Fix Conflicts'), ('managerecrules', 'Manage Recording Rules'), ('musicplaylists', 'Select music playlists'), ('mythgallery', 'MythGallery'), ('mythgame', 'MythGame'), ('mythnews', 'MythNews'), ('mythvideo', 'Video Default'), ('mythweather', 'MythWeather'), ('pbb', 'TV Recording Playback'), ('playbackbox', 'TV Recording Playback'), ('playbackrecordings', 'TV Recording Playback'), ('playdvd', 'Play Disc'), ('playlistview', 'Play music'), ('playmusic', 'Play music'), ('previousbox', 'Previously Recorded'), ('progfinder', 'Program Finder'), ('programfinder', 'Program Finder'), ('programguide', 'Program Guide'), ('reloadtheme', 'Reload Theme'), ('ripcd', 'Rip CD'), ('showborders', 'Toggle Show Widget Borders'), ('shownames', 'Toggle Show Widget Names'), ('statusbox', 'Status Screen'), ('videobrowser', 'Video Browser'), ('videogallery', 'Video Gallery'), ('videolistings', 'Video Listings'), ('videomanager', 'Video Manager'), ('viewscheduled', 'Manage Recordings / Fix Conflicts'), ('zoneminderconsole', 'ZoneMinder Console'), ('zoneminderevents', 'ZoneMinder Events'), ('zoneminderliveview', 'ZoneMinder Live View')])
ok
test_repr_004_01 (test.test_repr_001.test_repr_and_str_004) ...
<MythBE 'myth://mythbev31:6543/' at 0x7efeec726940>
<MythBE 'myth://mythbev31:6543/' at 0x7efeec726940>
ok
test_repr_005_01 (test.test_repr_001.test_repr_and_str_005) ...
<System '/bin/echo' at 0x7efef2952470>
<System '/bin/echo' at 0x7efef2952470>
ok

----------------------------------------------------------------------
Ran 8 tests in 0.135s

OK
test_Singleton_001_01 (test.test_singleton_001.test_Singleton_001)
Test MythTV.utility.Singleton. ... ok
test_Singleton_002_01 (test.test_singleton_001.test_Singleton_001)
Test MythTV.utility.InputSingleton. ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.001s

OK
Name                            Stmts   Miss Branch BrPart  Cover
-----------------------------------------------------------------
MythTV/__init__.py                 20      0      0      0   100%
MythTV/_conn_mysqldb.py            63      8     20      6    83%
MythTV/_conn_oursql.py             37     33     12      0     8%
MythTV/altdict.py                 170      7     59      1    96%
MythTV/connections.py             423    141    125     22    63%
MythTV/database.py                889    202    419     49    75%
MythTV/dataheap.py                930    351    309     63    59%
MythTV/exceptions.py              126     99     52      7    19%
MythTV/logging.py                 322    144    154     22    48%
MythTV/methodheap.py              653    181    304     68    66%
MythTV/msearch.py                  69      7     28      7    84%
MythTV/mythproto.py               612    178    278     52    64%
MythTV/static.py                  237      0      0      0   100%
MythTV/system.py                  283     43    144     20    80%
MythTV/utility/__init__.py          7      0      0      0   100%
MythTV/utility/altdict.py         103     75     14      0    24%
MythTV/utility/dequebuffer.py     232     92     74     15    55%
MythTV/utility/dicttoxml.py       203    203     90      0     0%
MythTV/utility/dt.py              316     36    142     29    85%
MythTV/utility/enum.py             82      4     58      3    95%
MythTV/utility/mixin.py           128    113    101      3     8%
MythTV/utility/other.py           404    125    185     28    64%
MythTV/utility/singleton.py        45     14     14      2    63%
-----------------------------------------------------------------
TOTAL                            6354   2056   2582    397    63%
local-admin@newton:~/MythTV/MythTV-Python-Tests_v3_only/v31/MythTV-Python-Tests$

