$ python --version
Python 3.6.9
$ echo $PYTHONPATH
/home/mythtv/mythtv/mythtv/bindings/python
$ ./empy_pytmdb3_cache.sh
$ ./delete_pycs.sh
$ ./run_all_tests_separated.sh 
Using python3-coverage.

Using the following tests:
test.test_Dataheap_Job_001
test.test_Dataheap_Job_002
test.test_Dataheap_Recorded_001
test.test_Dataheap_Recorded_002
test.test_Dataheap_Recorded_003
test.test_Dataheap_Video_001
test.test_Dataheap_Video_002
test.test_Dataheap_Video_003
test.test_Dataheap_Video_004
test.test_Dataheap_Video_005
test.test_Dataheap_VideoGrabber_001
test.test_datetime_001
test.test_datetime_002
test.test_DBCache_001
test.test_DictData_001
test.test_Logging_001
test.test_Logging_002
test.test_Logging_003
test.test_Logging_004
test.test_Logging_005
test.test_Logging_006
test.test_Methodheap_BEEventMonitor_001
test.test_Methodheap_Frontend_001
test.test_Methodheap_MythBE_001
test.test_Methodheap_MythDB_001
test.test_Methodheap_MythSystemEvent_001
test.test_Methodheap_MythXML_001
test.test_Methodheap_MythXML_002
test.test_MSearch_001
test.test_MSearch_002
test.test_Mythproto_001
test.test_System_001
test.test_repr_001
test_Dataheap_Job_001_01 (test.test_Dataheap_Job_001.test_Dataheap_Job_001)
Test classmethod Job.fromRecorded() from 'dataheap'. ... /home/admin/MythTV/mythtv//MythTV/_conn_mysqldb.py:72: Warning: (1364, "Field 'args' doesn't have a default value")
  return super(LoggedCursor, self).execute(query, args)
ok

----------------------------------------------------------------------
Ran 1 test in 20.068s

OK
sys:1: ResourceWarning: unclosed file <_io.BufferedWriter name='/tmp/my_logfile'>
test_Dataheap_Job_002_01 (test.test_Dataheap_Job_002.test_Dataheap_Job_002)
Test classmethod Job.fromProgram() from 'dataheap'. ... /home/admin/MythTV/mythtv//MythTV/_conn_mysqldb.py:72: Warning: (1364, "Field 'args' doesn't have a default value")
  return super(LoggedCursor, self).execute(query, args)

<Job '2060' at 0x7f99dd02ac50>
<Job '2060' at 0x7f99dd02ac50>
ok
test_Dataheap_Job_002_02 (test.test_Dataheap_Job_002.test_Dataheap_Job_002)
Test exception of classmethod Job.fromProgram() from 'dataheap'. ... ok

----------------------------------------------------------------------
Ran 2 tests in 60.159s

OK
sys:1: ResourceWarning: unclosed file <_io.BufferedWriter name='/tmp/my_logfile'>
test_Dataheap_Recorded_001_01 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test property 'artwork' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_02 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'getProgram()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_03 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'getRecordedProgram()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_04 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'formatPath()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_05 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'exportMetadata()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_06 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'Recorded.importMetadata()' and 'Recorded.update()' ... ok
test_Dataheap_Recorded_001_07 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test methods 'db.searchRecorded and Recorded.getRecordedFile()' ... 
<RecordedFile '3030_20190305125100.mkv','4762' at 0x7f965688ce08>
<RecordedFile '3030_20190305125100.mkv','4762' at 0x7f965688ce08>
['3030_20190305125100.mkv', 2793354377, 992, 720, 25.0, 1.377778, 0, 0, 'AAC', 'H264', '', 'server', 'Default', 4762, 4762, 'MATROSKA', 0, 0, 0, 0, 0]
['3030_20190305125100.mkv', 2793354377, 992, 720, 25.0, 1.377778, 0, 0, 'AAC', 'H264', '', 'server', 'Default', 4762, 4762, 'MATROSKA', 0, 0, 0, 0, 0]
['basename', 'filesize', 'width', 'height', 'fps', 'aspect', 'audio_sample_rate', 'audio_channels', 'audio_codec', 'video_codec', 'comment', 'hostname', 'storagegroup', 'id', 'recordedid', 'container', 'total_bitrate', 'video_avg_bitrate', 'video_max_bitrate', 'audio_avg_bitrate', 'audio_max_bitrate']
['basename', 'filesize', 'width', 'height', 'fps', 'aspect', 'audio_sample_rate', 'audio_channels', 'audio_codec', 'video_codec', 'comment', 'hostname', 'storagegroup', 'id', 'recordedid', 'container', 'total_bitrate', 'video_avg_bitrate', 'video_max_bitrate', 'audio_avg_bitrate', 'audio_max_bitrate']
25.0
25.0
ok

----------------------------------------------------------------------
Ran 7 tests in 0.191s

OK
test_Dataheap_Recorded_002_01 (test.test_Dataheap_Recorded_002.test_Dataheap_Recorded_002)
Test creation of a Recoreded and ... ok
test_Dataheap_Recorded_002_02 (test.test_Dataheap_Recorded_002.test_Dataheap_Recorded_002)
Test creation of a Recoreded and ... Die letzte Metro
[[('name', 'Catherine Deneuve'), ('role', 'actor')], [('name', 'Gérard Depardieu'), ('role', 'actor')], [('name', 'Andréa Ferréol'), ('role', 'actor')], [('name', 'François Truffaut'), ('role', 'director')]]
ok

----------------------------------------------------------------------
Ran 2 tests in 0.093s

OK
test_Dataheap_Recorded_003_01 (test.test_Dataheap_Recorded_003.test_Dataheap_Recorded_003)
Test creation of a Recoreded and ... [[('name', 'Catherine Deneuve'), ('role', 'actor')], [('name', 'Gérard Depardieu'), ('role', 'actor')], [('name', 'Andréa Ferréol'), ('role', 'actor')], [('name', 'Jean Poiret'), ('role', 'actor')], [('name', 'François Truffaut'), ('role', 'director')]]
ok

----------------------------------------------------------------------
Ran 1 test in 0.070s

OK
test_Dataheap_Video_001_getHash_01 (test.test_Dataheap_Video_001.test_Dataheap_Video_001)
Test 'getHash' method from MythTV.Video ... 
<Video 'Let's Make Love' at 0x7f2d6a795728>
<Video '140' at 0x7f2d6a795728>
ok

----------------------------------------------------------------------
Ran 1 test in 0.044s

OK
test_Dataheap_Video_002_parseFilename_01 (test.test_Dataheap_Video_002.test_Dataheap_Video_002)
Test 'parseFilename' method from MythTV.Video ... ok
test_Dataheap_Video_002_parseFilename_02 (test.test_Dataheap_Video_002.test_Dataheap_Video_002)
Test 'parseFilename' method from MythTV.Video ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.032s

OK
test_Dataheap_Video_003_exportMetadata_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'exportMetadata' method from MythTV.Video. ... ok
test_Dataheap_Video_003_fromFilename_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'fromFilename' classmethod from MythTV.Video. ... ok
test_Dataheap_Video_003_importMetadata_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'exportMetadata' method from MythTV.Video. ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.100s

OK
test_Dataheap_Video_004_01 (test.test_Dataheap_Video_004.test_Dataheap_Video_004)
Test creation of a Video and ... <Video 'Le Dernier Métro' at 0x7f7fb5b7e678>
<Video '1510' at 0x7f7fb5b7e678>
ok

----------------------------------------------------------------------
Ran 1 test in 0.057s

OK
test_Dataheap_Video_005_01 (test.test_Dataheap_Video_005.test_Dataheap_Video_005)
Test creation of a Video with an existing file and host entry. ... ssh mythtv@192.168.47.11 'head -c 10M </dev/urandom > "/mnt/mydata-04/data-04/myth_videos/dvds/Le Dernier Métro.mkv"'
ssh mythtv@192.168.47.11 'rm "/mnt/mydata-04/data-04/myth_videos/dvds/Le Dernier Métro.mkv"'
ok

----------------------------------------------------------------------
Ran 1 test in 0.968s

OK
test_Dataheap_VideoGrabber_001_grabInetref_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'grabInetref' and 'toXML' methods from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_001_search_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'search' method from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_001_sortedSearch_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'sortedSearch' method from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_002_importMetadata_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_002)
Test 'VideoGrabber.grabInetref' method and 'Video.importMetadata' ... ok
test_Dataheap_VideoGrabber_002_importMetadata_02 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_002)
Test 'VideoGrabber.grabInetref' method and 'Video.importMetadata' ... ok

----------------------------------------------------------------------
Ran 5 tests in 4.421s

OK
/usr/lib/python3.6/importlib/_bootstrap.py:219: ImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__
  return f(*args, **kwds)
test_datetime_001_01 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_02 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_03 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_04 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_05 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_06 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_07 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_08 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_09 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_10 (test.test_datetime_001.test_datetime_001)
Test 'utctimestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_11 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_12 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_13 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok

----------------------------------------------------------------------
Ran 13 tests in 0.073s

OK
/usr/lib/python3.6/importlib/_bootstrap.py:219: ImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__
  return f(*args, **kwds)
test_datetime_002_01 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_02 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_03 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_04 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_05 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_06 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_07 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_08 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_09 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_10 (test.test_datetime_002.test_datetime_002)
Test 'utctimestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_11 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_12 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_13 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok

----------------------------------------------------------------------
Ran 13 tests in 0.072s

OK
test_DBCache_001_01 (test.test_DBCache_001.test_DBCache_001)
Get all settings from database. ... Python-Version: 3
ok

----------------------------------------------------------------------
Ran 1 test in 0.025s

OK
test_dictdata_001_01 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'integer' object. ... ok
test_dictdata_001_02 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'float' object. ... ok
test_dictdata_001_03 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'bool' object. ... ok
test_dictdata_001_04 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'str' object. ... ok
test_dictdata_001_05 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'tiemstamp' object. ... ok
test_dictdata_001_06 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'ISO date' object. ... ok
test_dictdata_001_07 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'RFC time' object. ... ok

----------------------------------------------------------------------
Ran 7 tests in 0.002s

OK
test_Logging_Basic_001_01 (test.test_Logging_001.test_Logging_Basic_001)
Test if default options works with MythLog. ... 
<MythLog 'simple_test','0b1' at 0x7f0d1a412940>
<MythLog 'simple_test','0b1' at 0x7f0d1a412940>
ok
test_Logging_Basic_002_01 (test.test_Logging_001.test_Logging_Basic_002)
Test if options can be modified from MythTV.MythLog. ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.002s

OK
test_Logging_Basic_003_01 (test.test_Logging_002.test_Logging_Basic_003)
Test that default options does not work without a MythLog instance. ... ok
test_Logging_Basic_004_01 (test.test_Logging_002.test_Logging_Basic_004)
"Test if setting options works without a MythLog instance. ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.002s

OK
test_logging_OptParse_001_01 (test.test_Logging_003.test_Logging_OptParse_001)
Test if 'OptParse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_logging_OptParse_002_01 (test.test_Logging_004.test_Logging_OptParse_002)
Test if 'OptParse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_Logging_argparse_001_01 (test.test_Logging_005.test_Logging_argparse_001)
Test if 'argparse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_Logging_argparse_002_01 (test.test_Logging_006.test_Logging_argparse_002)
Test if 'argparse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.002s

OK
test_test_Methodheap_BEEventMonitor_001_01 (test.test_Methodheap_BEEventMonitor_001.test_Methodheap_BEEventMonitor_001)
Test 'BEEventMonitor' from MythTV.BEEventMonitor() with logging. ... ok

----------------------------------------------------------------------
Ran 1 test in 21.998s

OK
test_Methodheap_Frontend_001_getLoad_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getLoad' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getMemory_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getTime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getPlay_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getPlay'' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getQuery_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getQuery'' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getScreenShot_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getScreenShot' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getTime_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getTime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getUptime_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getUptime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_query_play_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'sendQuery', 'sendPlay' and 'jump' methods from MythTV.Frontend() ... ok

----------------------------------------------------------------------
Ran 8 tests in 45.143s

OK
test_Methodheap_MythBE_001_getPendingRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_001)
Test 'getPendingRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_002_getScheduledRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_002)
Test 'getScheduledRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_003_getUpcomingRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_003)
Test 'getUpcomingRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_004_getConflictedRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_004)
Test 'getConflictedRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_005_getRecorderList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_005)
Test 'getRecorderList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_006_getFreeRecorderList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_006)
Test 'getFreeRecorderList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_007_getFreeInputInfo_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_007)
Test 'getFreeInputInfo' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_009_getCurrentRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_009)
Test 'getCurrentRecording' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_010_isRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_010)
Test 'isRecording' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_011_isActiveBackend_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_011)
Test 'isActiveBackend' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_012_getRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_012)
Test 'getRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_013_getExpiring_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_013)
Test 'getExpiring' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_014_getExpiring_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_014)
Test 'getCheckfile' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_016_getFreeSpaceSummary_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_016)
Test 'getFreeSpaceSummary' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_017_getLoad_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_017)
Test 'getLoad' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_018_getUptime_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_018)
Test 'getUptime' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_019_walkSG_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_019)
Test 'walkSG' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_020_getSGList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_020)
Test 'getSGList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_020_getSGList_02 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_020)
Test 'getSGList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_021_getSGFile_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_021)
Test 'getSGFile' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_101_getRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_101)
Test 'getRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_102_forgetRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_102)
Test 'forgetRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_103_deleteRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_103)
Test 'deleteRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_104_deleteFile_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_104)
Test 'deleteFile' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_105_getHash_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_105)
Test 'getHash' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_106_reschedule_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_106)
Test 'reschedule' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_106_reschedule_02 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_106)
Test 'reschedule' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_107_fileExists_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_107)
Test 'fileExists' method from MythTV.MythBE() inherited from FileOps. ... ok
test_methodheap_mythbe_015_getFreeSpace_01 (test.test_Methodheap_MythBE_001.test_methodheap_mythbe_015)
test 'getFreeSpace' method from mythtv.mythbe(). ... ok
test_methodheap_mythbe_015_getFreeSpace_02 (test.test_Methodheap_MythBE_001.test_methodheap_mythbe_015)
test 'getFreeSpace' method from mythtv.mythbe(). ... 
<FreeSpace 'server:/mnt/mydata-01/data-01/livetv,server:/mnt/mydata-01/data-01/recordings,server:/mnt/mydata-01/data-01/streaming@server' at 0x7fa624edfe60>
<FreeSpace 'server:/mnt/mydata-01/data-01/livetv,server:/mnt/mydata-01/data-01/recordings,server:/mnt/mydata-01/data-01/streaming@server' at 0x7fa624edfe60>
ok

----------------------------------------------------------------------
Ran 30 tests in 6.890s

OK
test_Methodheap_MythDB_001_searchRecorded_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'chanid'. ... ok
test_Methodheap_MythDB_001_searchRecorded_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'chanid', 'title'. ... ok
test_Methodheap_MythDB_001_searchRecorded_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_04 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan' and 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_05 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan' and 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_06 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan', ... ok
test_Methodheap_MythDB_002_searchOldRecorded_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() via 'chanid'. ... ok
test_Methodheap_MythDB_002_searchOldRecorded_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() via 'chanid', 'title'. ... ok
test_Methodheap_MythDB_002_searchOldRecorded_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_003_searchArtwork_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_003_searchArtwork_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB(), ... ok
test_Methodheap_MythDB_003_searchArtwork_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB() by given inetref. ... ok
test_Methodheap_MythDB_004_searchJobs_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_004)
Test 'searchJobs' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_005_searchGuide_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_005)
Test 'searchGuide' method from MythTV.MythDB(). ... 
<Guide 'Die weiße Schlange','2019-12-14 14:30:00+01:00' at 0x7f7978705b48>
ok
test_Methodheap_MythDB_005_searchGuide_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_005)
Test 'searchGuide' method from MythTV.MythDB() using fuzzy title. ... ok
test_Methodheap_MythDB_006_searchRecord_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_006)
Test 'searchRecord' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_006_searchRecord_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_006)
Test 'searchRecord' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_007_getFrontends_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_007)
Test 'getFrontends' method from MythTV.MythDB(). ... /home/admin/MythTV/mythtv//test/test_Methodheap_MythDB_001.py:341: ResourceWarning: unclosed <MythTV.utility.other.deadlinesocket fd=5, family=AddressFamily.AF_INET, type=2049, proto=0, laddr=('0.0.0.0', 0)>
  frontends = next(self.mydb.getFrontends())
No frontend is connected to the MythTV's python bindings.
ok
test_Methodheap_MythDB_008_getFrontend_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_008)
Test 'getFrontend' method from MythTV.MythDB(). ... /home/admin/MythTV/mythtv//test/test_Methodheap_MythDB_001.py:369: ResourceWarning: unclosed <MythTV.utility.other.deadlinesocket fd=5, family=AddressFamily.AF_INET, type=2049, proto=0, laddr=('0.0.0.0', 0)>
  pass
ok
test_Methodheap_MythDB_009_scanVideos_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_009)
Test 'scanVideos' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_010_searchVideos_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_010)
Test 'searchVideos' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_100_gethostnames_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_100)
Test 'gethostname' method from MythTV.MythDB() inherited from DBCache. ... ok
test_Methodheap_MythDB_101_getMasterBackend_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_101)
Test 'getMasterBackend' method from MythTV.MythDB() inherited from DBCache. ... ok
test_Methodheap_MythDB_102_getStorageGroup_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_102)
Test 'getStorageGroup' method from MythTV.MythDB() inherited from DBCache. ... ok

----------------------------------------------------------------------
Ran 24 tests in 1.405s

OK
test_test_Methodheap_MythSystemEvent_001_01 (test.test_Methodheap_MythSystemEvent_001.test_Methodheap_MythSystemEvent_001)
Test if 'MythSystemEvent' calls a registered script for the ... ok

----------------------------------------------------------------------
Ran 1 test in 3.628s

OK
test_Methodheap_MythXML_001_01 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getHosts(). ... ok
test_Methodheap_MythXML_001_010 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getRecorded() during standard time and ... ok
test_Methodheap_MythXML_001_02 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getKeys(). ... ok
test_Methodheap_MythXML_001_03 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getSetting(). ... ok
test_Methodheap_MythXML_001_04 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getProgramGuide() ... ok
test_Methodheap_MythXML_001_05 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getProgramDetails(). ... ok
test_Methodheap_MythXML_001_06 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getChannelIcon() ... ok
test_Methodheap_MythXML_001_07 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getRecorded(). ... ok
test_Methodheap_MythXML_001_08 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getExpiring(). ... ok
test_Methodheap_MythXML_001_09 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getPreviewImage(). ... ok

----------------------------------------------------------------------
Ran 10 tests in 14.862s

OK
test_Methodheap_MythXML_002_01 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getHosts() with logging. ... ok
test_Methodheap_MythXML_002_010 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getRecorded() during standard time and ... ok
test_Methodheap_MythXML_002_02 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getKeys() with logging. ... ok
test_Methodheap_MythXML_002_03 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getSetting() with logging. ... ok
test_Methodheap_MythXML_002_04 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getProgramGuide()  with logging. ... ok
test_Methodheap_MythXML_002_05 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getProgramDetails()  with logging. ... ok
test_Methodheap_MythXML_002_06 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getChannelIcon() with logging. ... ok
test_Methodheap_MythXML_002_07 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getRecorded() with logging. ... ok
test_Methodheap_MythXML_002_08 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getExpiring() with logging. ... ok
test_Methodheap_MythXML_002_09 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getPreviewImage(). ... ok

----------------------------------------------------------------------
Ran 10 tests in 15.024s

OK
test_MSearch_001_01 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.search(). ... ok
test_MSearch_001_02 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.searchMythBE(). ... ok
test_MSearch_001_03 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.searchMythFE(). ... ok

----------------------------------------------------------------------
Ran 3 tests in 2.577s

OK
test_MSearch_002_01 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.search() logging. ... ok
test_MSearch_002_02 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.searchMythBE() logging. ... ok
test_MSearch_002_03 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.searchMythFE() logging. ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.980s

OK
test_Mythproto_001_findfile_01 (test.test_Mythproto_001.test_Mythproto_001)
Test 'findfile' method from MythTV mytproto. ... ok
test_Mythproto_002_ftopen_01 (test.test_Mythproto_001.test_Mythproto_002)
Test 'ftopen' method from MythTV mythproto.py with 'chanid', 'starttime'. ... Exception ignored in: <bound method FileTransfer.__del__ of <open file 'myth://Temp@192.168.47.11/3002_20190622105000.mkv', mode 'w' at 0x7fbd778d49e8>>
Traceback (most recent call last):
  File "/home/admin/MythTV/mythtv//MythTV/mythproto.py", line 402, in __del__
    del self.ftsock
AttributeError: ftsock
ok
test_Mythproto_003_ftopen_01 (test.test_Mythproto_001.test_Mythproto_003)
Test 'ftopen' method from MythTV mythproto.py with 'chanid', 'starttime' ... ok
test_Mythproto_004_ftopen_01 (test.test_Mythproto_001.test_Mythproto_004)
Test 'ftopen' method from MythTV mythproto.py by calling ... ok
test_Mythproto_005_ftopen_01 (test.test_Mythproto_001.test_Mythproto_005)
Test 'ftopen' method from MythTV mythproto.py by calling ... ok

----------------------------------------------------------------------
Ran 5 tests in 199.512s

OK
Exception ignored in: <bound method FileTransfer.__del__ of <open file 'myth://LiveTV@192.168.47.11/3030_20191223164547.ts', mode 'r' at 0x7fbd76e5ecc0>>
Traceback (most recent call last):
  File "/home/admin/MythTV/mythtv//MythTV/mythproto.py", line 402, in __del__
    del self.ftsock
AttributeError: ftsock
Exception ignored in: <bound method DownloadFileTransfer.__del__ of <open file 'myth://Temp@192.168.47.11//download_c75a7f33.tmp', mode 'r' at 0x7fbd76e5eef0>>
Traceback (most recent call last):
  File "/home/admin/MythTV/mythtv//MythTV/mythproto.py", line 621, in __del__
    FileTransfer.__del__(self)
  File "/home/admin/MythTV/mythtv//MythTV/mythproto.py", line 402, in __del__
    del self.ftsock
AttributeError: ftsock
Exception ignored in: <bound method FileTransfer.__del__ of <open file 'myth://Default@192.168.47.11/3002_20190622105000.mkv', mode 'r' at 0x7fbd778ca6d8>>
Traceback (most recent call last):
  File "/home/admin/MythTV/mythtv//MythTV/mythproto.py", line 402, in __del__
    del self.ftsock
AttributeError: ftsock
test_system_001_01 (test.test_System_001.test_System_001)
Test if 'System' executes 'echo' command. ... ok
test_system_001_02 (test.test_System_001.test_System_001)
Test if 'System' failes on 'exho' command. ... ok
test_system_002_01 (test.test_System_001.test_System_002)
Test if 'System.system' executes 'echo' command. ... ok
test_system_002_02 (test.test_System_001.test_System_002)
Test if 'System.system' failes on 'exho' command. ... ok
test_system_002_03 (test.test_System_001.test_System_002)
Test if 'System.system' executes command specified to report to 'stderr'. ... ok
test_system_003_01 (test.test_System_001.test_System_003)
Test if 'System.system' executes 'echo' command with unicode characters. ... ok

----------------------------------------------------------------------
Ran 6 tests in 0.527s

OK
test_repr_001_01 (test.test_repr_001.test_repr_and_str_001) ... 
<MythDB 'sql://mythconverg@192.168.47.11:3306/' at 0x7f559ec8fe80>
<MythDB 'sql://mythconverg@192.168.47.11:3306/' at 0x7f559ec8fe80>

['recgroups']
['recgroups']

{'type': 'varchar(64)', 'null': 'NO', 'key': 'UNI', 'default': '', 'extra': ''}
{'type': 'varchar(64)', 'null': 'NO', 'key': 'UNI', 'default': '', 'extra': ''}
ok
test_repr_001_02 (test.test_repr_001.test_repr_and_str_001) ... 
[]
[]

[]
[]

'192.168.47.11'
192.168.47.11

[]
[]

'6546'
6546
ok
test_repr_001_03 (test.test_repr_001.test_repr_and_str_001) ... 
<StorageGroup 'myth://LiveTV@server/mnt/mydata-01/data-01/livetv/' at 0x7f559e7eb570
<StorageGroup 'myth://LiveTV@server/mnt/mydata-01/data-01/livetv/' at 0x7f559e7eb570
ok
test_repr_002_01 (test.test_repr_001.test_repr_and_str_002) ... 
<Recorded 'Die Lady von Shanghai','2019-03-05 13:51:00+01:00' at 0x7f559ed019e8>
<Recorded 'Die Lady von Shanghai','2019-03-05 13:51:00+01:00' at 0x7f559ed019e8>

[[('mark', 1), ('type', 14), ('data', 1377777)], [('mark', 1), ('type', 30), ('data', 992)], [('mark', 1), ('type', 31), ('data', 720)], [('mark', 1), ('type', 32), ('data', 25000)], [('mark', 0), ('type', 33), ('data', 5030160)], [('mark', 0), ('type', 34), ('data', 125754)], [('mark', 39024), ('type', 41), ('data', None)]]
[[('mark', 1), ('type', 14), ('data', 1377777)], [('mark', 1), ('type', 30), ('data', 992)], [('mark', 1), ('type', 31), ('data', 720)], [('mark', 1), ('type', 32), ('data', 25000)], [('mark', 0), ('type', 33), ('data', 5030160)], [('mark', 0), ('type', 34), ('data', 125754)], [('mark', 39024), ('type', 41), ('data', None)]]

[('mark', 1), ('type', 14), ('data', 1377777)]
[('mark', 1), ('type', 14), ('data', 1377777)]

1
1

1377777
1377777

<RecordedArtwork 'tmdb3.py_3766','0' at 0x7f559e81ca40>
<RecordedArtwork 'tmdb3.py_3766','0' at 0x7f559e81ca40>

<Coverart 'tmdb3.py_3766_coverart.jpg'>
coverart

<RecordedProgram 'Die Lady von Shanghai','2019-03-05 13:55:00+01:00' at 0x7f559e81cd00>
<RecordedProgram 'Die Lady von Shanghai','2019-03-05 13:55:00+01:00' at 0x7f559e81cd00>

<OldRecorded 'Die Lady von Shanghai','2019-03-05 13:55:00+01:00' at 0x7f559e5a7308>
<OldRecorded 'Die Lady von Shanghai','2019-03-05 13:55:00+01:00' at 0x7f559e5a7308>
ok
test_repr_002_02 (test.test_repr_001.test_repr_and_str_002) ... 
<Channel '3030','arte HD' at 0x7f559ed019e8>
<Channel '3030','arte HD' at 0x7f559ed019e8>

1
1
ok
test_repr_003_01 (test.test_repr_001.test_repr_and_str_003) ... 
<Frontend '192.168.47.12@6546' at 0x7f559e81e278>
192.168.47.12@6546

['#', '$', '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '[', '\\', ']', '_', 'ampersand', 'asterisk', 'backslash', 'backspace', 'backtab', 'bar', 'bracketleft', 'bracketright', 'colon', 'comma', 'delete', 'dollar', 'down', 'end', 'enter', 'equal', 'escape', 'f1', 'f10', 'f11', 'f12', 'f13', 'f14', 'f15', 'f16', 'f17', 'f18', 'f19', 'f2', 'f20', 'f21', 'f22', 'f23', 'f24', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'greater', 'hash', 'home', 'insert', 'left', 'less', 'minus', 'numbersign', 'pagedown', 'pageup', 'parenleft', 'parenright', 'percent', 'period', 'pipe', 'plus', 'poundsign', 'question', 'return', 'right', 'semicolon', 'slash', 'space', 'tab', 'underscore', 'up', '|']
['#', '$', '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '[', '\\', ']', '_', 'ampersand', 'asterisk', 'backslash', 'backspace', 'backtab', 'bar', 'bracketleft', 'bracketright', 'colon', 'comma', 'delete', 'dollar', 'down', 'end', 'enter', 'equal', 'escape', 'f1', 'f10', 'f11', 'f12', 'f13', 'f14', 'f15', 'f16', 'f17', 'f18', 'f19', 'f2', 'f20', 'f21', 'f22', 'f23', 'f24', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'greater', 'hash', 'home', 'insert', 'left', 'less', 'minus', 'numbersign', 'pagedown', 'pageup', 'parenleft', 'parenright', 'percent', 'period', 'pipe', 'plus', 'poundsign', 'question', 'return', 'right', 'semicolon', 'slash', 'space', 'tab', 'underscore', 'up', '|']

dict_items([('channelpriorities', 'Channel Recording Priorities'), ('channelrecpriority', 'Channel Recording Priorities'), ('guidegrid', 'Program Guide'), ('livetv', 'Live TV'), ('mainmenu', 'Main Menu'), ('managerecordings', 'Manage Recordings / Fix Conflicts'), ('managerecrules', 'Manage Recording Rules'), ('musicplaylists', 'Select music playlists'), ('mythgallery', 'MythGallery'), ('mythgame', 'MythGame'), ('mythnews', 'MythNews'), ('mythvideo', 'Video Default'), ('mythweather', 'MythWeather'), ('pbb', 'TV Recording Playback'), ('playbackbox', 'TV Recording Playback'), ('playbackrecordings', 'TV Recording Playback'), ('playdvd', 'Play Disc'), ('playlistview', 'Play music'), ('playmusic', 'Play music'), ('previousbox', 'Previously Recorded'), ('progfinder', 'Program Finder'), ('programfinder', 'Program Finder'), ('programguide', 'Program Guide'), ('reloadtheme', 'Reload Theme'), ('ripcd', 'Rip CD'), ('showborders', 'Toggle Show Widget Borders'), ('shownames', 'Toggle Show Widget Names'), ('statusbox', 'Status Screen'), ('videobrowser', 'Video Browser'), ('videogallery', 'Video Gallery'), ('videolistings', 'Video Listings'), ('videomanager', 'Video Manager'), ('viewscheduled', 'Manage Recordings / Fix Conflicts'), ('zoneminderconsole', 'ZoneMinder Console'), ('zoneminderevents', 'ZoneMinder Events'), ('zoneminderliveview', 'ZoneMinder Live View')])
dict_items([('channelpriorities', 'Channel Recording Priorities'), ('channelrecpriority', 'Channel Recording Priorities'), ('guidegrid', 'Program Guide'), ('livetv', 'Live TV'), ('mainmenu', 'Main Menu'), ('managerecordings', 'Manage Recordings / Fix Conflicts'), ('managerecrules', 'Manage Recording Rules'), ('musicplaylists', 'Select music playlists'), ('mythgallery', 'MythGallery'), ('mythgame', 'MythGame'), ('mythnews', 'MythNews'), ('mythvideo', 'Video Default'), ('mythweather', 'MythWeather'), ('pbb', 'TV Recording Playback'), ('playbackbox', 'TV Recording Playback'), ('playbackrecordings', 'TV Recording Playback'), ('playdvd', 'Play Disc'), ('playlistview', 'Play music'), ('playmusic', 'Play music'), ('previousbox', 'Previously Recorded'), ('progfinder', 'Program Finder'), ('programfinder', 'Program Finder'), ('programguide', 'Program Guide'), ('reloadtheme', 'Reload Theme'), ('ripcd', 'Rip CD'), ('showborders', 'Toggle Show Widget Borders'), ('shownames', 'Toggle Show Widget Names'), ('statusbox', 'Status Screen'), ('videobrowser', 'Video Browser'), ('videogallery', 'Video Gallery'), ('videolistings', 'Video Listings'), ('videomanager', 'Video Manager'), ('viewscheduled', 'Manage Recordings / Fix Conflicts'), ('zoneminderconsole', 'ZoneMinder Console'), ('zoneminderevents', 'ZoneMinder Events'), ('zoneminderliveview', 'ZoneMinder Live View')])
ok
test_repr_004_01 (test.test_repr_001.test_repr_and_str_004) ... 
<MythBE 'myth://server:6543/' at 0x7f559e812710>
<MythBE 'myth://server:6543/' at 0x7f559e812710>
ok
test_repr_005_01 (test.test_repr_001.test_repr_and_str_005) ... 
<System '/bin/echo' at 0x7f559e812f60>
<System '/bin/echo' at 0x7f559e812f60>
ok

----------------------------------------------------------------------
Ran 8 tests in 0.102s

OK
Name                            Stmts   Miss Branch BrPart  Cover
-----------------------------------------------------------------
MythTV/__init__.py                 20      0      0      0   100%
MythTV/_conn_mysqldb.py            59      7     20      5    85%
MythTV/_conn_oursql.py             37     33     12      0     8%
MythTV/altdict.py                 169     38     59      7    78%
MythTV/connections.py             423    140    125     21    63%
MythTV/database.py                894    199    421     51    75%
MythTV/dataheap.py                927    349    309     63    59%
MythTV/exceptions.py              126     94     52      7    23%
MythTV/logging.py                 255     92    122     18    55%
MythTV/methodheap.py              651    186    304     61    65%
MythTV/msearch.py                  69      7     28      7    84%
MythTV/mythproto.py               610    179    278     53    64%
MythTV/static.py                  235      0      0      0   100%
MythTV/system.py                  281     40    142     18    81%
MythTV/utility/__init__.py          7      0      0      0   100%
MythTV/utility/altdict.py         103     75     14      0    24%
MythTV/utility/dequebuffer.py     232     92     74     15    55%
MythTV/utility/dicttoxml.py       200    200     90      0     0%
MythTV/utility/dt.py              315     47    142     23    80%
MythTV/utility/enum.py             82     35     58     17    50%
MythTV/utility/mixin.py           128    113    101      3     8%
MythTV/utility/other.py           397    121    185     30    64%
MythTV/utility/singleton.py        45     24     14      1    41%
-----------------------------------------------------------------
TOTAL                            6265   2071   2550    400    62%


