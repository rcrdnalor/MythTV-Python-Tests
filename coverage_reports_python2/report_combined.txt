$ env python --version
Python 2.7.15+
$ export PYTHONPATH=`pwd`
$ ./empy_pytmdb3_cache.sh
$ ./delete_pycs.sh
$  python-coverage erase
$ python-coverage run --parallel-mode --concurrency=multiprocessing run_all_tests_combined.py
test_Dataheap_Job_001_01 (test.test_Dataheap_Job_001.test_Dataheap_Job_001)
Test classmethod Job.fromRecorded() from 'dataheap'. ... /mythtv/mythtv/bindings/python/MythTV/_conn_mysqldb.py:72: Warning: (1364L, u"Field 'args' doesn't have a default value")
  return super(LoggedCursor, self).execute(query, args)
ok

----------------------------------------------------------------------
Ran 1 test in 60.121s

OK
test_Dataheap_Job_002_01 (test.test_Dataheap_Job_002.test_Dataheap_Job_002)
Test classmethod Job.fromProgram() from 'dataheap'. ... /mythtv/mythtv/bindings/python/MythTV/_conn_mysqldb.py:72: Warning: (1364L, u"Field 'args' doesn't have a default value")
  return super(LoggedCursor, self).execute(query, args)
()
b'<Job '1306' at 0x7f53be37b3c8>'
<Job '1306' at 0x7f53be37b3c8>
ok
test_Dataheap_Job_002_02 (test.test_Dataheap_Job_002.test_Dataheap_Job_002)
Test exception of classmethod Job.fromProgram() from 'dataheap'. ... ok

----------------------------------------------------------------------
Ran 2 tests in 60.159s

OK
test_Dataheap_Recorded_001_01 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test property 'artwork' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_02 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'getProgram()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_03 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'getRecordedProgram()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_04 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'formatPath()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_05 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'exportMetadata()' in class 'Recorded' from 'dataheap'. ... ok
test_Dataheap_Recorded_001_06 (test.test_Dataheap_Recorded_001.test_Dataheap_Recorded_001)
Test method 'Recorded.importMetadata()' and 'Recorded.update()' ... ok

----------------------------------------------------------------------
Ran 6 tests in 0.128s

OK
test_Dataheap_Video_001_getHash_01 (test.test_Dataheap_Video_001.test_Dataheap_Video_001)
Test 'getHash' method from MythTV.Video ... ()
<Video 'Let's Make Love' at 0x7f53be357e30>
<Video '140' at 0x7f53be357e30>
ok

----------------------------------------------------------------------
Ran 1 test in 0.042s

OK
test_Dataheap_Video_002_parseFilename_01 (test.test_Dataheap_Video_002.test_Dataheap_Video_002)
Test 'parseFilename' method from MythTV.Video ... ok
test_Dataheap_Video_002_parseFilename_02 (test.test_Dataheap_Video_002.test_Dataheap_Video_002)
Test 'parseFilename' method from MythTV.Video ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.025s

OK
test_Dataheap_Video_003_exportMetadata_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'exportMetadata' method from MythTV.Video. ... ok
test_Dataheap_Video_003_fromFilename_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'fromFilename' classmethod from MythTV.Video. ... ok
test_Dataheap_Video_003_importMetadata_01 (test.test_Dataheap_Video_003.test_Dataheap_Video_003)
Test 'exportMetadata' method from MythTV.Video. ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.113s

OK
test_Dataheap_VideoGrabber_001_grabInetref_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'grabInetref' and 'toXML' methods from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_001_search_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'search' method from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_001_sortedSearch_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_001)
Test 'sortedSearch' method from MythTV.VideoGrabber ... ok
test_Dataheap_VideoGrabber_002_importMetadata_01 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_002)
Test 'VideoGrabber.grabInetref' method and 'Video.importMetadata' ... ok
test_Dataheap_VideoGrabber_002_importMetadata_02 (test.test_Dataheap_VideoGrabber_001.test_Dataheap_VideoGrabber_002)
Test 'VideoGrabber.grabInetref' method and 'Video.importMetadata' ... ok

----------------------------------------------------------------------
Ran 5 tests in 16.076s

OK
test_datetime_001_01 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_02 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_03 (test.test_datetime_001.test_datetime_001)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_04 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_05 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_06 (test.test_datetime_001.test_datetime_001)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_07 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_08 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_09 (test.test_datetime_001.test_datetime_001)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_10 (test.test_datetime_001.test_datetime_001)
Test 'utctimestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_11 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_12 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok
test_datetime_001_13 (test.test_datetime_001.test_datetime_001)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'Europe/Vienna' ... ok

----------------------------------------------------------------------
Ran 13 tests in 0.063s

OK
test_datetime_002_01 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_02 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_03 (test.test_datetime_002.test_datetime_002)
Test 'ISO' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_04 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_05 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_06 (test.test_datetime_002.test_datetime_002)
Test 'mythtime (i.e. integer time)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_07 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_08 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_09 (test.test_datetime_002.test_datetime_002)
Test 'timestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_10 (test.test_datetime_002.test_datetime_002)
Test 'utctimestamp (i.e. seconds from epoch)' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_11 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_12 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok
test_datetime_002_13 (test.test_datetime_002.test_datetime_002)
Test 'RFC' to 'UTC' conversion in respect to daylight saving time of 'America/Anchorage' ... ok

----------------------------------------------------------------------
Ran 13 tests in 0.062s

OK
test_dictdata_001_01 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'integer' object. ... ok
test_dictdata_001_02 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'float' object. ... ok
test_dictdata_001_03 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'bool' object. ... ok
test_dictdata_001_04 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'str' object. ... ok
test_dictdata_001_05 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'tiemstamp' object. ... ok
test_dictdata_001_06 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'ISO date' object. ... ok
test_dictdata_001_07 (test.test_DictData_001.test_DictData_001)
Test filling and 'decompressing' of a simple DictData 'RFC time' object. ... ok

----------------------------------------------------------------------
Ran 7 tests in 0.001s

OK
test_Logging_Basic_001_01 (test.test_Logging_001.test_Logging_Basic_001)
Test if default options works with MythLog. ... ()
<MythLog 'simple_test','0b1' at 0x7f53c3a40910>
<MythLog 'simple_test','0b1' at 0x7f53c3a40910>
ok
test_Logging_Basic_002_01 (test.test_Logging_001.test_Logging_Basic_002)
Test if options can be modified from MythTV.MythLog. ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.001s

OK
test_Logging_Basic_003_01 (test.test_Logging_002.test_Logging_Basic_003)
Test that default options does not work without a MythLog instance. ... ok
test_Logging_Basic_004_01 (test.test_Logging_002.test_Logging_Basic_004)
"Test if setting options works without a MythLog instance. ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.001s

OK
test_logging_OptParse_001_01 (test.test_Logging_003.test_Logging_OptParse_001)
Test if 'OptParse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_logging_OptParse_002_01 (test.test_Logging_004.test_Logging_OptParse_002)
Test if 'OptParse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
test_Logging_argparse_001_01 (test.test_Logging_005.test_Logging_argparse_001)
Test if 'argparse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.002s

OK
test_Logging_argparse_002_01 (test.test_Logging_006.test_Logging_argparse_002)
Test if 'argparse' works with MythLog. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.002s

OK
test_test_Methodheap_BEEventMonitor_001_01 (test.test_Methodheap_BEEventMonitor_001.test_Methodheap_BEEventMonitor_001)
Test 'BEEventMonitor' from MythTV.BEEventMonitor() with logging. ... ok

----------------------------------------------------------------------
Ran 1 test in 21.901s

OK
test_Methodheap_Frontend_001_getLoad_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getLoad' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getMemory_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getTime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getPlay_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getPlay'' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getQuery_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getQuery'' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getScreenShot_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getScreenShot' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getTime_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getTime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_getUptime_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'getUptime' methods from MythTV.Frontend(). ... ok
test_Methodheap_Frontend_001_query_play_01 (test.test_Methodheap_Frontend_001.test_Methodheap_Frontend_001)
Test 'sendQuery', 'sendPlay' and 'jump' methods from MythTV.Frontend() ... ok

----------------------------------------------------------------------
Ran 8 tests in 45.023s

OK
test_Methodheap_MythBE_001_getPendingRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_001)
Test 'getPendingRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_002_getScheduledRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_002)
Test 'getScheduledRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_003_getUpcomingRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_003)
Test 'getUpcomingRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_004_getConflictedRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_004)
Test 'getConflictedRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_005_getRecorderList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_005)
Test 'getRecorderList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_006_getFreeRecorderList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_006)
Test 'getFreeRecorderList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_007_getFreeInputInfo_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_007)
Test 'getFreeInputInfo' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_009_getCurrentRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_009)
Test 'getCurrentRecording' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_010_isRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_010)
Test 'isRecording' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_011_isActiveBackend_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_011)
Test 'isActiveBackend' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_012_getRecordings_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_012)
Test 'getRecordings' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_013_getExpiring_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_013)
Test 'getExpiring' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_014_getExpiring_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_014)
Test 'getCheckfile' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_016_getFreeSpaceSummary_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_016)
Test 'getFreeSpaceSummary' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_017_getLoad_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_017)
Test 'getLoad' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_018_getUptime_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_018)
Test 'getUptime' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_019_walkSG_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_019)
Test 'walkSG' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_020_getSGList_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_020)
Test 'getSGList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_020_getSGList_02 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_020)
Test 'getSGList' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_021_getSGFile_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_021)
Test 'getSGFile' method from MythTV.MythBE(). ... ok
test_Methodheap_MythBE_101_getRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_101)
Test 'getRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_102_forgetRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_102)
Test 'forgetRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_103_deleteRecording_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_103)
Test 'deleteRecording' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_104_deleteFile_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_104)
Test 'deleteFile' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_105_getHash_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_105)
Test 'getHash' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_106_reschedule_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_106)
Test 'reschedule' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_106_reschedule_02 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_106)
Test 'reschedule' method from MythTV.MythBE() inherited from FileOps. ... ok
test_Methodheap_MythBE_107_fileExists_01 (test.test_Methodheap_MythBE_001.test_Methodheap_MythBE_107)
Test 'fileExists' method from MythTV.MythBE() inherited from FileOps. ... ok
test_methodheap_mythbe_015_getFreeSpace_01 (test.test_Methodheap_MythBE_001.test_methodheap_mythbe_015)
test 'getFreeSpace' method from mythtv.mythbe(). ... ok
test_methodheap_mythbe_015_getFreeSpace_02 (test.test_Methodheap_MythBE_001.test_methodheap_mythbe_015)
test 'getFreeSpace' method from mythtv.mythbe(). ... ()
<FreeSpace 'server:/path/to/livetv,server:/path/to/recordings,server:/path/to/streaming@server' at 0x7f53bd859050>
<FreeSpace 'server:/path/to/livetv,server:/path/to/recordings,server:/path/to/streaming@server' at 0x7f53bd859050>
ok

----------------------------------------------------------------------
Ran 30 tests in 9.371s

OK
test_Methodheap_MythDB_001_searchRecorded_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'chanid'. ... ok
test_Methodheap_MythDB_001_searchRecorded_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'chanid', 'title'. ... ok
test_Methodheap_MythDB_001_searchRecorded_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_04 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan' and 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_05 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan' and 'newerthan'. ... ok
test_Methodheap_MythDB_001_searchRecorded_06 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_001)
Test 'seachRecorded' method from MythTV.MythDB() using 'olderthan', ... ok
test_Methodheap_MythDB_002_searchOldRecorded_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() via 'chanid'. ... ok
test_Methodheap_MythDB_002_searchOldRecorded_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() via 'chanid', 'title'. ... ok
test_Methodheap_MythDB_002_searchOldRecorded_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_002)
Test 'searchOldRecorded' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_003_searchArtwork_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_003_searchArtwork_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB(), ... ok
test_Methodheap_MythDB_003_searchArtwork_03 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_003)
Test 'searchArtwork' method from MythTV.MythDB() by given inetref. ... ok
test_Methodheap_MythDB_004_searchJobs_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_004)
Test 'searchJobs' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_005_searchGuide_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_005)
Test 'searchGuide' method from MythTV.MythDB(). ... ()
b'<Guide 'Ghosted','2019-09-04 02:54:12+02:00' at 0x7f53bd879ab8>'
<Guide 'Ghosted','2019-09-04 02:54:12+02:00' at 0x7f53bd879ab8>
ok
test_Methodheap_MythDB_005_searchGuide_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_005)
Test 'searchGuide' method from MythTV.MythDB() using fuzzy title. ... ok
test_Methodheap_MythDB_006_searchRecord_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_006)
Test 'searchRecord' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_006_searchRecord_02 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_006)
Test 'searchRecord' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_007_getFrontends_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_007)
Test 'getFrontends' method from MythTV.MythDB(). ... No frontend is connected to the MythTV's python bindings.
ok
test_Methodheap_MythDB_008_getFrontend_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_008)
Test 'getFrontend' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_009_scanVideos_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_009)
Test 'scanVideos' method from MythTV.MythDB(). ... ok
test_Methodheap_MythDB_010_searchVideos_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_010)
Test 'searchVideos' method from MythTV.MythDB() ... ok
test_Methodheap_MythDB_100_gethostnames_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_100)
Test 'gethostname' method from MythTV.MythDB() inherited from DBCache. ... ok
test_Methodheap_MythDB_101_getMasterBackend_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_101)
Test 'getMasterBackend' method from MythTV.MythDB() inherited from DBCache. ... ok
test_Methodheap_MythDB_102_getStorageGroup_01 (test.test_Methodheap_MythDB_001.test_Methodheap_MythDB_102)
Test 'getStorageGroup' method from MythTV.MythDB() inherited from DBCache. ... ok

----------------------------------------------------------------------
Ran 24 tests in 1.566s

OK
test_test_Methodheap_MythSystemEvent_001_01 (test.test_Methodheap_MythSystemEvent_001.test_Methodheap_MythSystemEvent_001)
Test if 'MythSystemEvent' calls a registered script for the ... ok

----------------------------------------------------------------------
Ran 1 test in 3.622s

OK
test_Methodheap_MythXML_001_01 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getHosts(). ... ok
test_Methodheap_MythXML_001_010 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getRecorded() during standard time and ... ok
test_Methodheap_MythXML_001_02 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getKeys(). ... ok
test_Methodheap_MythXML_001_03 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getSetting(). ... ok
test_Methodheap_MythXML_001_04 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getProgramGuide() ... ok
test_Methodheap_MythXML_001_05 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getProgramDetails(). ... ok
test_Methodheap_MythXML_001_06 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getChannelIcon() ... ok
test_Methodheap_MythXML_001_07 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getRecorded(). ... ok
test_Methodheap_MythXML_001_08 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getExpiring(). ... ok
test_Methodheap_MythXML_001_09 (test.test_Methodheap_MythXML_001.test_Methodheap_MythXML_001)
Test MythXML.getPreviewImage(). ... ok

----------------------------------------------------------------------
Ran 10 tests in 13.991s

OK
test_Methodheap_MythXML_002_01 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getHosts() with logging. ... ok
test_Methodheap_MythXML_002_010 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getRecorded() during standard time and ... ok
test_Methodheap_MythXML_002_02 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getKeys() with logging. ... ok
test_Methodheap_MythXML_002_03 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getSetting() with logging. ... ok
test_Methodheap_MythXML_002_04 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getProgramGuide()  with logging. ... ok
test_Methodheap_MythXML_002_05 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getProgramDetails()  with logging. ... ok
test_Methodheap_MythXML_002_06 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getChannelIcon() with logging. ... ok
test_Methodheap_MythXML_002_07 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getRecorded() with logging. ... ok
test_Methodheap_MythXML_002_08 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getExpiring() with logging. ... ok
test_Methodheap_MythXML_002_09 (test.test_Methodheap_MythXML_002.test_Methodheap_MythXML_002)
Test MythXML.getPreviewImage(). ... ok

----------------------------------------------------------------------
Ran 10 tests in 13.909s

OK
test_MSearch_001_01 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.search(). ... ok
test_MSearch_001_02 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.searchMythBE(). ... ok
test_MSearch_001_03 (test.test_MSearch_001.test_MSearch_001)
Test MSearch.searchMythFE(). ... ok

----------------------------------------------------------------------
Ran 3 tests in 1.985s

OK
test_MSearch_002_01 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.search() logging. ... ok
test_MSearch_002_02 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.searchMythBE() logging. ... ok
test_MSearch_002_03 (test.test_MSearch_002.test_MSearch_002)
Test MSearch.searchMythFE() logging. ... ok

----------------------------------------------------------------------
Ran 3 tests in 1.777s

OK
test_Mythproto_001_findfile_01 (test.test_Mythproto_001.test_Mythproto_001)
Test 'findfile' method from MythTV mytproto. ... ok
test_Mythproto_002_ftopen_01 (test.test_Mythproto_001.test_Mythproto_002)
Test 'ftopen' method from MythTV mythproto.py with 'chanid', 'starttime'. ... Exception AttributeError: 'ftsock' in <bound method FileTransfer.__del__ of <open file 'myth://Temp@<ip-address>/3002_20190622105000.mkv', mode 'w' at 0x7f53be3630d0>> ignored
ok
test_Mythproto_003_ftopen_01 (test.test_Mythproto_001.test_Mythproto_003)
Test 'ftopen' method from MythTV mythproto.py with 'chanid', 'starttime' ... ok
test_Mythproto_004_ftopen_01 (test.test_Mythproto_001.test_Mythproto_004)
Test 'ftopen' method from MythTV mythproto.py by calling ... ok
test_Mythproto_005_ftopen_01 (test.test_Mythproto_001.test_Mythproto_005)
Test 'ftopen' method from MythTV mythproto.py by calling ... Exception AttributeError: 'ftsock' in <bound method DownloadFileTransfer.__del__ of <open file 'myth://Temp@<ip-address>//dltestfile', mode 'r' at 0x7f53bdb2df50>> ignored
ok

----------------------------------------------------------------------
Ran 5 tests in 193.948s

OK
test_system_001_01 (test.test_System_001.test_System_001)
Test if 'System' executes 'echo' command. ... ok
test_system_001_02 (test.test_System_001.test_System_001)
Test if 'System' failes on 'exho' command. ... ok
test_system_002_01 (test.test_System_001.test_System_002)
Test if 'System.system' executes 'echo' command. ... ok
test_system_002_02 (test.test_System_001.test_System_002)
Test if 'System.system' failes on 'exho' command. ... ok
test_system_002_03 (test.test_System_001.test_System_002)
Test if 'System.system' executes command specified to report to 'stderr'. ... ok
test_system_003_01 (test.test_System_001.test_System_003)
Test if 'System.system' executes 'echo' command with unicode characters. ... ok

----------------------------------------------------------------------
Ran 6 tests in 0.518s

OK
test_repr_001_01 (test.test_repr_001.test_repr_and_str_001) ... ()
<MythDB 'sql://mythconverg@<ip-address>:3306/' at 0x7f53be5c0ed0>
<MythDB 'sql://mythconverg@<ip-address>:3306/' at 0x7f53be5c0ed0>
()
b'['recgroups']'
['recgroups']
()
{'default': u'', 'null': u'NO', 'type': u'varchar(64)', 'key': u'UNI', 'extra': u''}
{'default': u'', 'null': u'NO', 'type': u'varchar(64)', 'key': u'UNI', 'extra': u''}
ok
test_repr_001_02 (test.test_repr_001.test_repr_and_str_001) ... ()
b'[]'
[]
()
b'[]'
[]
()
u'<ip-address>'
<ip-address>
()
b'[]'
[]
()
u'6546'
6546
ok
test_repr_001_03 (test.test_repr_001.test_repr_and_str_001) ... ()
b'<StorageGroup 'myth://LiveTV@server/path/to/livetv/' at 0x7f53be35d050'
<StorageGroup 'myth://LiveTV@server/path/to/livetv/' at 0x7f53be35d050
ok
test_repr_002_01 (test.test_repr_001.test_repr_and_str_002) ... ()
b'<Recorded 'Die Lady von Shanghai','2019-03-05 13:51:00+01:00' at 0x7f53be361050>'
<Recorded 'Die Lady von Shanghai','2019-03-05 13:51:00+01:00' at 0x7f53be361050>
()
[[(u'mark', 1), (u'type', 14), (u'data', 1377777L)], [(u'mark', 1), (u'type', 30), (u'data', 992L)], [(u'mark', 1), (u'type', 31), (u'data', 720L)], [(u'mark', 1), (u'type', 32), (u'data', 25000L)], [(u'mark', 0), (u'type', 33), (u'data', 5030160L)], [(u'mark', 0), (u'type', 34), (u'data', 125754L)], [(u'mark', 39024), (u'type', 41), (u'data', None)]]
[[(u'mark', 1), (u'type', 14), (u'data', 1377777L)], [(u'mark', 1), (u'type', 30), (u'data', 992L)], [(u'mark', 1), (u'type', 31), (u'data', 720L)], [(u'mark', 1), (u'type', 32), (u'data', 25000L)], [(u'mark', 0), (u'type', 33), (u'data', 5030160L)], [(u'mark', 0), (u'type', 34), (u'data', 125754L)], [(u'mark', 39024), (u'type', 41), (u'data', None)]]
()
b'[(u'mark', 1), (u'type', 14), (u'data', 1377777L)]'
[(u'mark', 1), (u'type', 14), (u'data', 1377777L)]
()
1
1
()
1377777L
1377777
()
b'<RecordedArtwork 'tmdb3.py_3766','0' at 0x7f53be383d08>'
<RecordedArtwork 'tmdb3.py_3766','0' at 0x7f53be383d08>
()
<Coverart 'tmdb3.py_3766_coverart.jpg'>
tmdb3.py_3766_coverart.jpg
()
b'<RecordedProgram 'Die Lady von Shanghai','2019-03-05 13:55:00+01:00' at 0x7f53be38b740>'
<RecordedProgram 'Die Lady von Shanghai','2019-03-05 13:55:00+01:00' at 0x7f53be38b740>
()
b'<OldRecorded 'Die Lady von Shanghai','2019-03-05 13:55:00+01:00' at 0x7f53be320178>'
<OldRecorded 'Die Lady von Shanghai','2019-03-05 13:55:00+01:00' at 0x7f53be320178>
ok
test_repr_002_02 (test.test_repr_001.test_repr_and_str_002) ... ()
b'<Channel '3030','arte HD' at 0x7f53be38b740>'
<Channel '3030','arte HD' at 0x7f53be38b740>
()
1
1
ok
test_repr_003_01 (test.test_repr_001.test_repr_and_str_003) ... ()
<Frontend '<ip-address>@6546' at 0x7f53bea2c710>
<ip-address>@6546
()
[u'#', u'$', u'%', u'&', u'(', u')', u'*', u'+', u',', u'-', u'.', u'/', u':', u';', u'<', u'=', u'>', u'?', u'[', u'\\', u']', u'_', u'ampersand', u'asterisk', u'backslash', u'backspace', u'backtab', u'bar', u'bracketleft', u'bracketright', u'colon', u'comma', u'delete', u'dollar', u'down', u'end', u'enter', u'equal', u'escape', u'f1', u'f10', u'f11', u'f12', u'f13', u'f14', u'f15', u'f16', u'f17', u'f18', u'f19', u'f2', u'f20', u'f21', u'f22', u'f23', u'f24', u'f3', u'f4', u'f5', u'f6', u'f7', u'f8', u'f9', u'greater', u'hash', u'home', u'insert', u'left', u'less', u'minus', u'numbersign', u'pagedown', u'pageup', u'parenleft', u'parenright', u'percent', u'period', u'pipe', u'plus', u'poundsign', u'question', u'return', u'right', u'semicolon', u'slash', u'space', u'tab', u'underscore', u'up', u'|']
[u'#', u'$', u'%', u'&', u'(', u')', u'*', u'+', u',', u'-', u'.', u'/', u':', u';', u'<', u'=', u'>', u'?', u'[', u'\\', u']', u'_', u'ampersand', u'asterisk', u'backslash', u'backspace', u'backtab', u'bar', u'bracketleft', u'bracketright', u'colon', u'comma', u'delete', u'dollar', u'down', u'end', u'enter', u'equal', u'escape', u'f1', u'f10', u'f11', u'f12', u'f13', u'f14', u'f15', u'f16', u'f17', u'f18', u'f19', u'f2', u'f20', u'f21', u'f22', u'f23', u'f24', u'f3', u'f4', u'f5', u'f6', u'f7', u'f8', u'f9', u'greater', u'hash', u'home', u'insert', u'left', u'less', u'minus', u'numbersign', u'pagedown', u'pageup', u'parenleft', u'parenright', u'percent', u'period', u'pipe', u'plus', u'poundsign', u'question', u'return', u'right', u'semicolon', u'slash', u'space', u'tab', u'underscore', u'up', u'|']
()
[(u'channelpriorities', u'Channel Recording Priorities'), (u'progfinder', u'Program Finder'), (u'videogallery', u'Video Gallery'), (u'playlistview', u'Play music'), (u'playdvd', u'Play Disc'), (u'managerecordings', u'Manage Recordings / Fix Conflicts'), (u'videolistings', u'Video Listings'), (u'guidegrid', u'Program Guide'), (u'videomanager', u'Video Manager'), (u'mythgame', u'MythGame'), (u'videobrowser', u'Video Browser'), (u'programfinder', u'Program Finder'), (u'shownames', u'Toggle Show Widget Names'), (u'previousbox', u'Previously Recorded'), (u'mythvideo', u'Video Default'), (u'zoneminderevents', u'ZoneMinder Events'), (u'managerecrules', u'Manage Recording Rules'), (u'programguide', u'Program Guide'), (u'viewscheduled', u'Manage Recordings / Fix Conflicts'), (u'statusbox', u'Status Screen'), (u'mainmenu', u'Main Menu'), (u'mythweather', u'MythWeather'), (u'playmusic', u'Play music'), (u'mythgallery', u'MythGallery'), (u'playbackrecordings', u'TV Recording Playback'), (u'mythnews', u'MythNews'), (u'channelrecpriority', u'Channel Recording Priorities'), (u'musicplaylists', u'Select music playlists'), (u'showborders', u'Toggle Show Widget Borders'), (u'zoneminderliveview', u'ZoneMinder Live View'), (u'ripcd', u'Rip CD'), (u'livetv', u'Live TV'), (u'pbb', u'TV Recording Playback'), (u'playbackbox', u'TV Recording Playback'), (u'reloadtheme', u'Reload Theme'), (u'zoneminderconsole', u'ZoneMinder Console')]
[(u'channelpriorities', u'Channel Recording Priorities'), (u'progfinder', u'Program Finder'), (u'videogallery', u'Video Gallery'), (u'playlistview', u'Play music'), (u'playdvd', u'Play Disc'), (u'managerecordings', u'Manage Recordings / Fix Conflicts'), (u'videolistings', u'Video Listings'), (u'guidegrid', u'Program Guide'), (u'videomanager', u'Video Manager'), (u'mythgame', u'MythGame'), (u'videobrowser', u'Video Browser'), (u'programfinder', u'Program Finder'), (u'shownames', u'Toggle Show Widget Names'), (u'previousbox', u'Previously Recorded'), (u'mythvideo', u'Video Default'), (u'zoneminderevents', u'ZoneMinder Events'), (u'managerecrules', u'Manage Recording Rules'), (u'programguide', u'Program Guide'), (u'viewscheduled', u'Manage Recordings / Fix Conflicts'), (u'statusbox', u'Status Screen'), (u'mainmenu', u'Main Menu'), (u'mythweather', u'MythWeather'), (u'playmusic', u'Play music'), (u'mythgallery', u'MythGallery'), (u'playbackrecordings', u'TV Recording Playback'), (u'mythnews', u'MythNews'), (u'channelrecpriority', u'Channel Recording Priorities'), (u'musicplaylists', u'Select music playlists'), (u'showborders', u'Toggle Show Widget Borders'), (u'zoneminderliveview', u'ZoneMinder Live View'), (u'ripcd', u'Rip CD'), (u'livetv', u'Live TV'), (u'pbb', u'TV Recording Playback'), (u'playbackbox', u'TV Recording Playback'), (u'reloadtheme', u'Reload Theme'), (u'zoneminderconsole', u'ZoneMinder Console')]
ok
test_repr_004_01 (test.test_repr_001.test_repr_and_str_004) ... ()
<MythBE 'myth://server:6543/' at 0x7f53be5cedd0>
<MythBE 'myth://server:6543/' at 0x7f53be5cedd0>
ok
test_repr_005_01 (test.test_repr_001.test_repr_and_str_005) ... ()
<System '/bin/echo' at 0x7f53be5cedd0>
<System '/bin/echo' at 0x7f53be5cedd0>
ok

----------------------------------------------------------------------
Ran 8 tests in 0.105s

OK
(170, 0, 0)
Coverage.py warning: No data was collected. (no-data-collected)

$ python-coverage combine
$ python-coverage report
Name                            Stmts   Miss Branch BrPart  Cover
-----------------------------------------------------------------
MythTV/__init__.py                 20      0      0      0   100%
MythTV/_conn_mysqldb.py            59     12     20      5    78%
MythTV/_conn_oursql.py             37     33     12      0     8%
MythTV/altdict.py                 169     50     59      7    72%
MythTV/connections.py             423    143    121     22    63%
MythTV/database.py                894    255    384     54    68%
MythTV/dataheap.py                913    356    300     62    58%
MythTV/exceptions.py              126     94     52      7    23%
MythTV/logging.py                 255     99    122     16    53%
MythTV/methodheap.py              651    190    282     61    64%
MythTV/msearch.py                  69      7     26      7    83%
MythTV/mythproto.py               611    183    278     50    64%
MythTV/static.py                  235      0      0      0   100%
MythTV/system.py                  281     40    134     18    81%
MythTV/utility/__init__.py          7      0      0      0   100%
MythTV/utility/altdict.py         103     75     14      0    24%
MythTV/utility/dequebuffer.py     232     96     74     15    53%
MythTV/utility/dicttoxml.py       200    200     88      0     0%
MythTV/utility/dt.py              315     47    138     23    80%
MythTV/utility/enum.py             82     35     54     17    49%
MythTV/utility/mixin.py           128    113     96      3     8%
MythTV/utility/other.py           397    126    169     30    63%
MythTV/utility/singleton.py        45     24     14      1    41%
-----------------------------------------------------------------
TOTAL                            6252   2178   2437    398    60%

$ python-coverage html
 

